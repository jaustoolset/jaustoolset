<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="ManipulatorJointVelocityDriver" id="urn:jaus:jss:manipulator:ManipulatorJointVelocityDriver" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The function of the Joint Velocity Driver is to perform closed-loop joint velocity control.  The input is the desired instantaneous joint velocities.  It is assumed that the manipulator begins motion immediately after receiving the “SET JOINT VELOCITY” message. To ensure backward compatibility with 1.0 implementations of this service, it is recommended that this service be co-located on the same component as a Manipulator Specification Service and a Manipulator Joint Motion Profile Service.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
    <references>
        <inherits_from name="management" id="urn:jaus:jss:core:Management" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="SetJointVelocity" message_id="0603" is_command="true">
                <description xml:space="preserve">This message sets the desired joint velocity values.  The message must contain a velocity command for each joint in the manipulator.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="JointVelocityList" optional="false">
                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        <record name="JointVelocityRec" optional="false">
                            <variable_field name="JointVelocity" optional="false" interpretation="Scaled integer representing the command velocity for this joint.  Each joint must have a corresponding entry in the list.  Units and scale range are based on the joint type.">
                                <type_and_units_field>
                                    <type_and_units_enum name="radianPerSecond" index="1" field_type="unsigned integer" field_units="radian per second">
                                        <scale_range real_lower_limit="-31.41592653589793" real_upper_limit="31.41592653589793" integer_function="round"/>
                                    </type_and_units_enum>
                                    <type_and_units_enum name="meterPerSecond" index="2" field_type="unsigned integer" field_units="meter per second">
                                        <scale_range real_lower_limit="-5" real_upper_limit="5" integer_function="round"/>
                                    </type_and_units_enum>
                                </type_and_units_field>
                            </variable_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryCommandedJointVelocity" message_id="2611" is_command="false">
                <description xml:space="preserve">This message shall cause the receiving service to reply to the requestor with a ID 4611h: ReportCommandedJointVelocity message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body"/>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ReportCommandedJointVelocity" message_id="4611" is_command="false">
                <description xml:space="preserve">This message provides the receiver with the commanded joint velocities for the manipulator.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="JointVelocityList" optional="false">
                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        <record name="JointVelocityRec" optional="false">
                            <variable_field name="JointVelocity" optional="false" interpretation="Scaled integer representing the command velocity for this joint.  Each joint must have a corresponding entry in the list.  Units and scale range are based on the joint type.">
                                <type_and_units_field>
                                    <type_and_units_enum name="radianPerSecond" index="1" field_type="unsigned integer" field_units="radian per second">
                                        <scale_range real_lower_limit="-31.41592653589793" real_upper_limit="31.41592653589793" integer_function="round"/>
                                    </type_and_units_enum>
                                    <type_and_units_enum name="meterPerSecond" index="2" field_type="unsigned integer" field_units="meter per second">
                                        <scale_range real_lower_limit="-5" real_upper_limit="5" integer_function="round"/>
                                    </type_and_units_enum>
                                </type_and_units_field>
                            </variable_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="management.accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="management.accessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="management.accessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                        </state>
                        <state name="NotAvailable" initial_state="Init">
                            <state name="Init"/>
                            <state name="Failure"/>
                            <state name="Shutdown"/>
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="management.accessControl.events.transport.Receive">
                                <parameter type="QueryCommandedJointVelocity" value="msg" interpretation="enveloped query commanded joint velocities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Commanded joint velocities message">
                                    <argument value=" 'ReportCommandedJointVelocity' "/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                            <state name="Ready">
                                <exit>
                                    <action name="stopMotion" interpretation="Stop motion of the manipulator."/>
                                </exit>
                                <transition name="management.accessControl.events.transport.Receive">
                                    <parameter type="SetJointVelocity" value="msg" interpretation="enveloped set joint velocities message"/>
                                    <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                    <guard condition="management.accessControl.isControllingClient(transportData)                      &amp;&amp; motionProfileExists()" interpretation="True if the message that triggered the transition                      is received from the client that is in control of this service AND                     True if a motion profile has already been received"/>
                                    <internal/>
                                    <action name="setJointVelocity" interpretation="Set the desired velocities for the individual joints                     of the manipulator">
                                        <argument value="msg"/>
                                    </action>
                                </transition>
                            </state>
                        </state>
                        <state name="NotAvailable" initial_state="Emergency">
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="management.accessControl.events.transport.Receive">
                                <parameter type="QueryCommandedJointVelocity" value="msg" interpretation="enveloped query commanded joint velocities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Commanded joint velocities message">
                                    <argument value=" 'ReportCommandedJointVelocity' "/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state/>
                </state>
            </state>
        </state_machine>
        <state_machine name="management.accessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
