<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="ManipulatorEndEffectorPoseListDriver" id="urn:jaus:jss:manipulator:ManipulatorEndEffectorPoseListDriver" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The function of the End Effector Pose List Driver is to perform closed-loop control of a sequence of positions and orientations of the tool tip specified in the manipulator base coordinate system. The sequence of targets is specified by one or more SetElement messages, as defined by the List Manager Service [AS6009]. To ensure backward compatibility with 1.0 implementations of this service, it is recommended that this service be co-located on the same component as a Manipulator Specification Service, a Manipulator Tool Offset Service, and a Manipulator Joint Motion Profile Service.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
    <references>
        <inherits_from name="manipulatorListDriver" id="urn:jaus:jss:manipulator:ManipulatorListDriver" version="2.0"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="QueryCommandedEndEffectorPose" message_id="2610" is_command="false">
                <description xml:space="preserve">This message shall cause the receiving service to reply to the requestor with a ID 4610h: ReportCommandedEndEffectorPose message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body"/>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ReportCommandedEndEffectorPose" message_id="4610" is_command="false">
                <description xml:space="preserve">This message provides the receiver with the commanded pose of the end effector.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="EndEffectorPoseRec" optional="false">
                        <fixed_field name="ToolPointCoordinateX" optional="false" field_type="unsigned integer" field_units="meter">
                            <scale_range real_lower_limit="-30" real_upper_limit="30" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="ToolPointCoordinateY" optional="false" field_type="unsigned integer" field_units="meter">
                            <scale_range real_lower_limit="-30" real_upper_limit="30" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="ToolPointCoordinateZ" optional="false" field_type="unsigned integer" field_units="meter">
                            <scale_range real_lower_limit="-30" real_upper_limit="30" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="DComponentOfUnitQuaternionQ" optional="false" interpretation="quaternion q = d + ai +bj + ck defines the orientation of the manipulator coordinate system measured with respect to the vehicle coordinate system" field_type="unsigned integer" field_units="one">
                            <scale_range real_lower_limit="-1" real_upper_limit="1" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="AComponentOfUnitQuaternionQ" optional="false" interpretation="quaternion q = d + ai +bj + ck defines the orientation of the manipulator coordinate system measured with respect to the vehicle coordinate system" field_type="unsigned integer" field_units="one">
                            <scale_range real_lower_limit="-1" real_upper_limit="1" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="BComponentOfUnitQuaternionQ" optional="false" interpretation="quaternion q = d + ai +bj + ck defines the orientation of the manipulator coordinate system measured with respect to the vehicle coordinate system" field_type="unsigned integer" field_units="one">
                            <scale_range real_lower_limit="-1" real_upper_limit="1" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="CComponentOfUnitQuaternionQ" optional="false" interpretation="quaternion q = d + ai +bj + ck defines the orientation of the manipulator coordinate system measured with respect to the vehicle coordinate system" field_type="unsigned integer" field_units="one">
                            <scale_range real_lower_limit="-1" real_upper_limit="1" integer_function="round"/>
                        </fixed_field>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="manipulatorListDriver.listManager.management.accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="manipulatorListDriver.listManager.management.accessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="manipulatorListDriver.listManager.management.accessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                        </state>
                        <state name="NotAvailable" initial_state="Init">
                            <state name="Init"/>
                            <state name="Failure"/>
                            <state name="Shutdown"/>
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="manipulatorListDriver.listManager.management.accessControl.events.transport.Receive">
                                <parameter type="QueryCommandedEndEffectorPose" value="msg" interpretation="enveloped query commanded end effector pose message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="manipulatorListDriver.listManager.management.accessControl.events.transport.Send" interpretation="Send a Report Commanded End Effector Pose message">
                                    <argument value=" 'ReportCommandedEndEffectorPose' "/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                            <state name="Ready">
                                <exit>
                                    <action name="stopMotion" interpretation="Stop motion of the manipulator."/>
                                </exit>
                                <transition name="manipulatorListDriver.listManager.management.accessControl.events.transport.Receive">
                                    <parameter type="ExecuteList" value="msg" interpretation="enveloped execute list message"/>
                                    <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                    <guard condition="manipulatorListDriver.listManager.management.accessControl.isControllingClient(transportData)                      &amp;&amp; listManager.elementExists(msg) &amp;&amp; isListValid()" interpretation="True if the message that triggered the transition                      is received from the client that is in control of this service AND                       True if the Element UID specified in the message that triggered                        the transition exists in the list AND True if the list contains                        End Effector Pose messages."/>
                                    <internal/>
                                    <action name="executeTargetList" interpretation="Begin sequential execution of the target list starting                      at the specified element.">
                                        <argument value="msg"/>
                                    </action>
                                </transition>
                            </state>
                        </state>
                        <state name="NotAvailable" initial_state="Emergency">
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="manipulatorListDriver.listManager.management.accessControl.events.transport.Receive">
                                <parameter type="QueryCommandedEndEffectorPose" value="msg" interpretation="enveloped query commanded end effector pose message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="manipulatorListDriver.listManager.management.accessControl.events.transport.Send" interpretation="Send a Report Commanded End Effector Pose message">
                                    <argument value=" 'ReportCommandedEndEffectorPose' "/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="manipulatorListDriver.listManager.management.accessControl.events.transport.Receive">
                                <parameter type="SetElement" value="msg" interpretation="enveloped set element message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <guard condition="manipulatorListDriver.listManager.management.accessControl.isControllingClient(transportData) &amp;&amp; listManager.isValidElementRequest(msg) &amp;&amp; isElementSupported(msg)" interpretation="True if the message that triggered the transition is                    received from the client that is in control of this service AND True                    if the resulting list will not be invalid as defined by the List                    Manager Service description and the receiving entity has sufficient                    memory to store the element(s) AND True if the message that triggered                    the transition contains payload(s) of valid serialized Set End Effector                    Pose message(s)."/>
                                <internal/>
                                <action name="setElement" interpretation="Store the given targets(s) in the target list with                    sequence specified by the previous and next element UIDs.  If this                    action represents an insert or append into an existing list, the service                    should modify the NextUID of the previous element and/or the PreviousUID                    of the next element to reflect the updated sequence">
                                    <argument value="msg"/>
                                </action>
                                <action name="manipulatorListDriver.listManager.management.accessControl.events.transport.Send" interpretation="Send a Confirm Element Request message">
                                    <argument value=" 'ConfirmElementRequest' "/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state/>
                </state>
            </state>
        </state_machine>
        <state_machine name="manipulatorListDriver.listManager.management.accessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
