<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="ManipulatorJointVelocitySensor" id="urn:jaus:jss:manipulator:ManipulatorJointVelocitySensor" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The function of the Joint Velocity Sensor Service is to report the values of manipulator joint velocities when queried.  To ensure backward compatibility with 1.0 implementations of this service, it is recommended that this service be co-located on the same component as a Manipulator Specification Service.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
    <references>
        <inherits_from name="events" id="urn:jaus:jss:core:Events" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="QueryJointVelocity" message_id="2603" is_command="false">
                <description xml:space="preserve">This message shall cause the receiving service to reply to the requestor with a ID 4603h: ReportJointVelocity message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body"/>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ReportJointVelocity" message_id="4603" is_command="false">
                <description xml:space="preserve">This message provides the receiver with the current values of the joint velocities.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="JointVelocityList" optional="false">
                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        <record name="JointVelocityRec" optional="false">
                            <variable_field name="JointVelocity" optional="false" interpretation="Scaled integer representing the command velocity for this joint.  Each joint must have a corresponding entry in the list.  Units and scale range are based on the joint type.">
                                <type_and_units_field>
                                    <type_and_units_enum name="radianPerSecond" index="1" field_type="unsigned integer" field_units="radian per second">
                                        <scale_range real_lower_limit="-31.41592653589793" real_upper_limit="31.41592653589793" integer_function="round"/>
                                    </type_and_units_enum>
                                    <type_and_units_enum name="meterPerSecond" index="2" field_type="unsigned integer" field_units="meter per second">
                                        <scale_range real_lower_limit="-5" real_upper_limit="5" integer_function="round"/>
                                    </type_and_units_enum>
                                </type_and_units_field>
                            </variable_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="events.transport.ReceiveFSM" state_name="Receiving.Ready"/>
        <start state_machine_name="events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready">
                    <default_state>
                        <transition name="events.transport.Receive">
                            <parameter type="QueryJointVelocity" value="msg" interpretation="enveloped query joint velocities message"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                            <internal/>
                            <action name="events.transport.Send" interpretation="Send Report Joint Velocity message to the service that                 sent the query">
                                <argument value=" 'ReportJointVelocity' "/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                    </default_state>
                </state>
            </state>
        </state_machine>
        <state_machine name="events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
