<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="PortMapper" id="urn:jaus:jss:environmentSensing:PortMapper" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">A port mapping service is required to support streaming of data from a device residing on a different subnet. For example, a digital resource such as a video or audio stream described by an RTSP endpoint may be on a network internal to the host platform. However, a controller or other client may reside on a different external network. The Port Mapper Service allows for the bridging of these two networks, such that the stream is accessible on the external facing network. Effectively, the stream source uses to the Port Mapper to request port forwarding, such that any traffic received on the external facing IP address and port is redirected by the service implementation to the stream host on the internal IP address and port. The stream source can then use the external IP and port in its discovery registration process. Note that the implementation of the Port Mapper must have access to both networks.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
    <references>
        <inherits_from name="events" id="urn:jaus:jss:core:Events" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="CancelPortMapping" message_id="080B" is_command="false">
                <description xml:space="preserve">This message is sent to cancel any mapping to the endpoint specified in the message.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="RequestPortMappingRec" optional="false">
                        <fixed_field name="SocketType" optional="false" field_type="unsigned byte" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="UDP"/>
                                <value_enum enum_index="1" enum_const="TCP"/>
                            </value_set>
                        </fixed_field>
                        <fixed_field name="IPAddr" optional="false" interpretation="IPv4 address of endpoint port to which PortMapper will map, in network byte order" field_type="unsigned integer" field_units="one"/>
                        <fixed_field name="Port" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="RequestPortMapping" message_id="080C" is_command="false">
                <description xml:space="preserve">This message is sent to request a port mapping at the network gateway (node hosting the PortMapper) such that network packets arriving on the gatewayâ€™s mapped port are forwarded to the endpoint specified in this request.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="RequestPortMappingRec" optional="false">
                        <fixed_field name="SocketType" optional="false" field_type="unsigned byte" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="UDP"/>
                                <value_enum enum_index="1" enum_const="TCP"/>
                            </value_set>
                        </fixed_field>
                        <fixed_field name="IPAddr" optional="false" interpretation="IPv4 address of endpoint port to which PortMapper will map, in network byte order" field_type="unsigned integer" field_units="one"/>
                        <fixed_field name="Port" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryPortMappings" message_id="2815" is_command="false">
                <description xml:space="preserve">This message is sent to request a list of all current mappings</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body"/>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="GrantPortMapping" message_id="080E" is_command="false">
                <description xml:space="preserve">The GrantPortMapping message is sent in response to the RequestPortMapping message. GrantPortMapping contains both the requested endpoint that was specified in the request, and the mapped endpoint on the external-facing network.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="GrantPortMappingSeq" optional="false">
                        <record name="RequestPortMappingRec" optional="false">
                            <fixed_field name="SocketType" optional="false" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="UDP"/>
                                    <value_enum enum_index="1" enum_const="TCP"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="IPAddr" optional="false" interpretation="IPv4 address of endpoint port to which PortMapper will map, in network byte order" field_type="unsigned integer" field_units="one"/>
                            <fixed_field name="Port" optional="false" field_type="unsigned short integer" field_units="one"/>
                        </record>
                        <record name="GrantPortMappingRec" optional="false">
                            <fixed_field name="IPAddr" optional="false" interpretation="IPv4 address of client side mapping of endpoint, in network byte order" field_type="unsigned integer" field_units="one"/>
                            <fixed_field name="Port" optional="false" field_type="unsigned short integer" field_units="one"/>
                        </record>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportPortMappings" message_id="4815" is_command="false">
                <description xml:space="preserve">This message is includes a list of all current mappings.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="MappingSeq" optional="false">
                        <record name="RequestPortMappingRec" optional="false">
                            <fixed_field name="SocketType" optional="false" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="UDP"/>
                                    <value_enum enum_index="1" enum_const="TCP"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="IPAddr" optional="false" interpretation="IPv4 address of endpoint port to which PortMapper will map, in network byte order" field_type="unsigned integer" field_units="one"/>
                            <fixed_field name="Port" optional="false" field_type="unsigned short integer" field_units="one"/>
                        </record>
                        <record name="GrantPortMappingRec" optional="false">
                            <fixed_field name="IPAddr" optional="false" interpretation="IPv4 address of client side mapping of endpoint, in network byte order" field_type="unsigned integer" field_units="one"/>
                            <fixed_field name="Port" optional="false" field_type="unsigned short integer" field_units="one"/>
                        </record>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="events.transport.ReceiveFSM" state_name="Receiving.Ready"/>
        <start state_machine_name="events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready">
                    <default_state>
                        <transition name="events.transport.Receive">
                            <parameter type="RequestPortMapping" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="createMappedPort" interpretation="Assign an external address and port to the endpoint specified in the message and begin forwarding traffic received on that port">
                                <argument value="msg"/>
                                <argument value="transportData"/>
                            </action>
                            <action name="sendGrantPortMapping" interpretation="Send a Grant Port Mapping message to the requesting client">
                                <argument value="msg"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="events.transport.Receive">
                            <parameter type="CancelPortMapping" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="cancelMappedPort" interpretation="Remove the specified mapping from the list of active maps">
                                <argument value="msg"/>
                            </action>
                        </transition>
                        <transition name="events.transport.Receive">
                            <parameter type="QueryPortMappings" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="sendReportPortMappings" interpretation="Send a Report Port Mappings message to the requesting client">
                                <argument value="msg"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                    </default_state>
                </state>
            </state>
        </state_machine>
        <state_machine name="events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
