<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="ManipulatorEndEffectorVelocityStateDriver" id="urn:jaus:jss:manipulator:ManipulatorEndEffectorVelocityStateDriver" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The function of the End Effector Velocity State Driver is to perform closed-loop velocity control of the tool tip.  The velocity state of the tool tip is defined by two length-three vectors, i.e., ωe and vtool,e.  These vectors respectively represent the angular velocity of the end effector coordinate system and the linear velocity of the tool tip as measured with respect to the manipulator base coordinate system.  It is assumed that the manipulator begins motion immediately after receiving the “Set End Effector Velocity State” message. To ensure backward compatibility with 1.0 implementations of this service, it is recommended that this service be co-located on the same component as a Manipulator Specification Service, a Manipulator Tool Offset Service, and a Manipulator Joint Motion Profile Service.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
    <references>
        <inherits_from name="management" id="urn:jaus:jss:core:Management" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="SetEndEffectorVelocityState" message_id="0612" is_command="true">
                <description xml:space="preserve">This message defines the desired end-effector velocity state measured with respect to the vehicle coordinate system.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="EndEffectorVelocityRec" optional="false">
                        <fixed_field name="AngularVelocityComponentX" optional="false" field_type="unsigned integer" field_units="radian per second">
                            <scale_range real_lower_limit="-62.83185307179586" real_upper_limit="62.83185307179586" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="AngularVelocityComponentY" optional="false" field_type="unsigned integer" field_units="radian per second">
                            <scale_range real_lower_limit="-62.83185307179586" real_upper_limit="62.83185307179586" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="AngularVelocityComponentZ" optional="false" field_type="unsigned integer" field_units="radian per second">
                            <scale_range real_lower_limit="-62.83185307179586" real_upper_limit="62.83185307179586" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="LinearVelocityComponentX" optional="false" field_type="unsigned integer" field_units="meter per second">
                            <scale_range real_lower_limit="-10" real_upper_limit="10" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="LinearVelocityComponentY" optional="false" field_type="unsigned integer" field_units="meter per second">
                            <scale_range real_lower_limit="-10" real_upper_limit="10" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="LinearVelocityComponentZ" optional="false" field_type="unsigned integer" field_units="meter per second">
                            <scale_range real_lower_limit="-10" real_upper_limit="10" integer_function="round"/>
                        </fixed_field>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryCommandedEndEffectorVelocityState" message_id="2612" is_command="false">
                <description xml:space="preserve">This message shall cause the receiving service to reply to the requestor with a ID 4612h: ReportCommandedEndEffectorVelocityState message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body"/>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ReportCommandedEndEffectorVelocityState" message_id="4612" is_command="false">
                <description xml:space="preserve">This message provides the receiver with the commanded end effector velocity state for the manipulator.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="EndEffectorVelocityRec" optional="false">
                        <fixed_field name="AngularVelocityComponentX" optional="false" field_type="unsigned integer" field_units="radian per second">
                            <scale_range real_lower_limit="-62.83185307179586" real_upper_limit="62.83185307179586" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="AngularVelocityComponentY" optional="false" field_type="unsigned integer" field_units="radian per second">
                            <scale_range real_lower_limit="-62.83185307179586" real_upper_limit="62.83185307179586" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="AngularVelocityComponentZ" optional="false" field_type="unsigned integer" field_units="radian per second">
                            <scale_range real_lower_limit="-62.83185307179586" real_upper_limit="62.83185307179586" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="LinearVelocityComponentX" optional="false" field_type="unsigned integer" field_units="meter per second">
                            <scale_range real_lower_limit="-10" real_upper_limit="10" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="LinearVelocityComponentY" optional="false" field_type="unsigned integer" field_units="meter per second">
                            <scale_range real_lower_limit="-10" real_upper_limit="10" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="LinearVelocityComponentZ" optional="false" field_type="unsigned integer" field_units="meter per second">
                            <scale_range real_lower_limit="-10" real_upper_limit="10" integer_function="round"/>
                        </fixed_field>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="management.accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="management.accessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="management.accessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                        </state>
                        <state name="NotAvailable" initial_state="Init">
                            <state name="Init"/>
                            <state name="Failure"/>
                            <state name="Shutdown"/>
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="management.accessControl.events.transport.Receive">
                                <parameter type="QueryCommandedEndEffectorVelocityState" value="msg" interpretation="enveloped query commanded End effector velocity                    state message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Commanded End effector velocity                    state message">
                                    <argument value=" 'ReportCommandedEndEffectorVelocityState' "/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                            <state name="Ready">
                                <exit>
                                    <action name="stopMotion" interpretation="Stop motion of the manipulator."/>
                                </exit>
                                <transition name="management.accessControl.events.transport.Receive">
                                    <parameter type="SetEndEffectorVelocityState" value="msg" interpretation="enveloped set End effector velocity state message"/>
                                    <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                    <guard condition="management.accessControl.isControllingClient(transportData)                      &amp;&amp; motionProfileExists()" interpretation="True if the message that triggered the transition                      is received from the client that is in control of this service AND                     True if a motion profile has already been received"/>
                                    <internal/>
                                    <action name="setEndEffectorVelocityState" interpretation="Set the desired velocity state for the end-effector">
                                        <argument value="msg"/>
                                    </action>
                                </transition>
                            </state>
                        </state>
                        <state name="NotAvailable" initial_state="Emergency">
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="management.accessControl.events.transport.Receive">
                                <parameter type="QueryCommandedEndEffectorVelocityState" value="msg" interpretation="enveloped query commanded End effector velocity                    state message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Commanded End effector velocity                    state message">
                                    <argument value=" 'ReportCommandedEndEffectorVelocityState' "/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state/>
                </state>
            </state>
        </state_machine>
        <state_machine name="management.accessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
