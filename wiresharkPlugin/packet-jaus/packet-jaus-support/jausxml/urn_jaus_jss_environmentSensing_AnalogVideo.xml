<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="AnalogVideo" id="urn:jaus:jss:environmentSensing:AnalogVideo" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">This service provides access to the 
		capabilities and configuration of the analog visual sensor, allowing 
		the controlling component to set the visual sensor to a particular 
		operational profile. The actual transmission of the video stream is 
		outside the scope of this service.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost or 
		reordered.</assumptions>
    <references>
        <inherits_from name="visualSensor" id="urn:jaus:jss:environmentSensing:VisualSensor" version="2.0"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="SetAnalogVideoSensorConfiguration" message_id="0806" is_command="true">
                <description xml:space="preserve">This message is used to set the configuration of the analog video sensor associated with the service. Configuration is based off of each sensorâ€™s capabilities as described in the Report Analog Video Sensor Capabilities message. This message shall cause the receiving service to reply to the sender with a Confirm Sensor Configuration message. If the configuration specified is invalid for a given sensor ID, the confirm message shall contain an Analog Video Error Record for the given Sensor ID however other, valid, configurations specified shall be set (if they exist).</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="AnalogVideoSensorConfigurationSequence" optional="false">
                        <record name="RequestIdRec" optional="false">
                            <fixed_field name="RequestID" optional="false" field_type="unsigned byte" field_units="one"/>
                        </record>
                        <list name="AnalogVideoSensorList" optional="false">
                            <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                            <record name="AnalogVideoSensorConfigurationRec" optional="false">
                                <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="AnalogFormat" optional="false" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NTSC-M"/>
                                        <value_enum enum_index="1" enum_const="NTSC-J"/>
                                        <value_enum enum_index="2" enum_const="PAL-N"/>
                                        <value_enum enum_index="3" enum_const="PAL-M"/>
                                        <value_enum enum_index="4" enum_const="SECAM-L"/>
                                        <value_enum enum_index="5" enum_const="SECAM-B/G"/>
                                    </value_set>
                                </fixed_field>
                            </record>
                        </list>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryAnalogVideoSensorConfiguration" message_id="2811" is_command="false">
                <description xml:space="preserve">This message shall cause the 
			receiving service to reply to the requestor with a Report 
			Analog Video Sensor Configuration message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="SensorIdList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="SensorIDQueryRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="AllSensors"/>
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                                </value_set>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryAnalogVideoSensorCapabilities" message_id="2810" is_command="false">
                <description xml:space="preserve">This message shall cause the 
			receiving service to reply to the requestor with a Report 
			Analog Video Sensor Capabilities message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="SensorIdList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="SensorIDQueryRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="AllSensors"/>
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                                </value_set>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ReportAnalogVideoSensorConfiguration" message_id="4811" is_command="false">
                <description xml:space="preserve">This message is sent in response to a Query Analog Video Sensor Configuration message. It is populated with the current sensor configuration (per sensor ID) as defined in the table below.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="AnalogVideoSensorConfigurationList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="AnalogVideoSensorConfigurationRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="AnalogFormat" optional="false" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="NTSC-M"/>
                                    <value_enum enum_index="1" enum_const="NTSC-J"/>
                                    <value_enum enum_index="2" enum_const="PAL-N"/>
                                    <value_enum enum_index="3" enum_const="PAL-M"/>
                                    <value_enum enum_index="4" enum_const="SECAM-L"/>
                                    <value_enum enum_index="5" enum_const="SECAM-B/G"/>
                                </value_set>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportAnalogVideoSensorCapabilities" message_id="4810" is_command="false">
                <description xml:space="preserve">This message is used to report the sensorsâ€™ capabilities upon receipt of a Query Analog Video Sensor Capabilities message. Capabilities include sensor properties, values and ranges which can be modified by the Set Analog Video Sensor Configuration message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="AnalogVideoSensorCapabilitiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="AnalogVideoSensorCapabilitiesRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                </value_set>
                            </fixed_field>
                            <bit_field name="SupportedAnalogFormats" optional="false" field_type_unsigned="unsigned byte">
                                <sub_field name="NTSCM">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="NTSCJ">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="PALN">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="PALM">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="SECAML">
                                    <bit_range from_index="4" to_index="4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="SECAMBG">
                                    <bit_range from_index="5" to_index="5"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="visualSensor.accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="visualSensor.accessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="visualSensor.accessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                        <default_state>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryAnalogVideoSensorCapabilities" value="msg" interpretation="enveloped QueryAnalogVideoSensorCapabilities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportAnalogVideoSensorCapabilities" interpretation="Send a ReportAnalogVideoSensorCapabilities message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryAnalogVideoSensorConfiguration" value="msg" interpretation="enveloped QueryAnalogVideoSensorConfiguration message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportAnalogVideoSensorConfiguration" interpretation="Send a ReportAnalogVideoSensorConfiguration message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                        <default_state>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="SetAnalogVideoSensorConfiguration" value="msg" interpretation="enveloped SetAnalogVideoSensorConfiguration message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <guard condition="accessControl.isControllingClient( transportData )" interpretation="True if the message that triggered           the transition is received from the client that is in           control of this service."/>
                                <internal/>
                                <action name="sendConfirmSensorConfiguration" interpretation="Send sendConfirmSensorConfiguration message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                                <action name="updateAnalogVideoSensorConfiguration" interpretation="Update the sensor user controllable           configuration parameters according to the ones specified.">
                                    <argument value="msg"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryAnalogVideoSensorCapabilities" value="msg" interpretation="enveloped QueryAnalogVideoSensorCapabilities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportAnalogVideoSensorCapabilities" interpretation="Send a ReportAnalogVideoSensorCapabilities message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryAnalogVideoSensorConfiguration" value="msg" interpretation="enveloped QueryAnalogVideoSensorConfiguration message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportAnalogVideoSensorConfiguration" interpretation="Send a ReportAnalogVideoSensorConfiguration message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state/>
                </state>
            </state>
        </state_machine>
        <state_machine name="visualSensor.accessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
