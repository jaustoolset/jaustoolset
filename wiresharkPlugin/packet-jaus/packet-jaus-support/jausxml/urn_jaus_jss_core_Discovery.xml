<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="Discovery" id="urn:jaus:jss:core:Discovery" version="1.1" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The process of discovery is conducted at both the node level and the subsystem level. This service supports the discovery of both legacy components defined in the JAUS Reference Architecture versions 3.2+, and new components. The Component IDs of legacy components were fixed at specification time (Primitive Driver = 33 for example) and could contain only one service beyond the core service support. New components may use any component ID that is outside the range of IDs that have been allocated to legacy component definitions. New components can also contain two or more services beyond the core service support.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost or reordered.</assumptions>
    <references>
        <inherits_from name="events" id="urn:jaus:jss:core:Events" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="QueryIdentification" message_id="2B00" is_command="false">
                <description xml:space="preserve">This message shall request the identification summary of a Subsystem, Node, or Component.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="QueryIdentificationRec" optional="false">
                        <fixed_field name="QueryType" optional="false" field_type="unsigned byte" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="Reserved"/>
                                <value_enum enum_index="1" enum_const="System Identification"/>
                                <value_enum enum_index="2" enum_const="Subsystem Identification"/>
                                <value_enum enum_index="3" enum_const="Node Identification"/>
                                <value_enum enum_index="4" enum_const="Component Identification"/>
                                <value_range lower_limit="5" lower_limit_type="inclusive" upper_limit="255" upper_limit_type="inclusive" interpretation="Reserved"/>
                            </value_set>
                        </fixed_field>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryConfiguration" message_id="2B01" is_command="false">
                <description xml:space="preserve">This message shall request the configuration summary of a subsystem or node. For example, to get the complete configuration of a subsystem, field 1 shall be set to 2.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="QueryConfigurationRec" optional="false">
                        <fixed_field name="QueryType" optional="false" field_type="unsigned byte" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="Reserved"/>
                                <value_enum enum_index="1" enum_const="Reserved"/>
                                <value_enum enum_index="2" enum_const="Subsystem Identification"/>
                                <value_enum enum_index="3" enum_const="Node Identification"/>
                                <value_range lower_limit="4" lower_limit_type="inclusive" upper_limit="255" upper_limit_type="inclusive" interpretation="Reserved"/>
                            </value_set>
                        </fixed_field>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QuerySubsystemList" message_id="2B02" is_command="false">
                <description xml:space="preserve">This message shall request the Report Subsystem List message.  There are no data fields associated with this message.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body"/>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryServices" message_id="2B03" is_command="false">
                <description xml:space="preserve">This message allows a component to request the service information of an entire subsystem or node, or a single component. The corresponding Report Services message will respond with service information only for new component implementations. It will not report service information for legacy component implementations.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="NodeList" optional="false" interpretation="# of Nodes reported. For a single Node Report this field shall be 1">
                        <count_field min_count="1" max_count="255" field_type_unsigned="unsigned byte"/>
                        <sequence name="NodeSeq" optional="false">
                            <record name="NodeRec" optional="false">
                                <fixed_field name="NodeID" optional="false" interpretation="Use 255 if service information from all nodes in the subsystem is required" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Reserved"/>
                                        <value_enum enum_index="255" enum_const="All nodes in the                   subsystem"/>
                                        <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="254" upper_limit_type="inclusive" interpretation="Valid Node IDs"/>
                                    </value_set>
                                </fixed_field>
                            </record>
                            <list name="ComponentList" optional="false">
                                <count_field min_count="1" max_count="255" field_type_unsigned="unsigned byte"/>
                                <record name="ComponentRec" optional="false">
                                    <fixed_field name="ComponentID" optional="false" interpretation="Use 255 if service information from  components in the node are required" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Reserved"/>
                                            <value_enum enum_index="255" enum_const="All components in the                     subsystem"/>
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="254" upper_limit_type="inclusive" interpretation="Valid Component IDs"/>
                                        </value_set>
                                    </fixed_field>
                                </record>
                            </list>
                        </sequence>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryServiceList" message_id="2B04" is_command="false">
                <description xml:space="preserve">This message allows a component to request the service information of services across all subsystems. The corresponding Report Services message will respond with service information only for new component implementations. It will not report service information for legacy component implementations.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="SubsystemList" optional="false" interpretation="Number of subsystems reported. For a single subsystem report this field shall be 1">
                        <count_field min_count="1" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <sequence name="SubsystemSeq" optional="false">
                            <record name="SubsystemRec" optional="false">
                                <fixed_field name="SubsystemID" optional="false" interpretation="Use 65535 if service information from all subsystems in the system is required" field_type="unsigned short integer" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Reserved"/>
                                        <value_enum enum_index="65535" enum_const="All subsystems in the                   system"/>
                                        <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65534" upper_limit_type="inclusive" interpretation="Valid Node IDs"/>
                                    </value_set>
                                </fixed_field>
                            </record>
                            <list name="NodeList" optional="false" interpretation="# of Nodes reported. For a single Node Report this field shall be 1">
                                <count_field min_count="1" max_count="255" field_type_unsigned="unsigned byte"/>
                                <sequence name="NodeSeq" optional="false">
                                    <record name="NodeRec" optional="false">
                                        <fixed_field name="NodeID" optional="false" interpretation="Use 255 if service information from all nodes in the subsystem is required" field_type="unsigned byte" field_units="one">
                                            <value_set offset_to_lower_limit="false">
                                                <value_enum enum_index="0" enum_const="Reserved"/>
                                                <value_enum enum_index="255" enum_const="All nodes in the                       subsystem"/>
                                                <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="254" upper_limit_type="inclusive" interpretation="Valid Node IDs"/>
                                            </value_set>
                                        </fixed_field>
                                    </record>
                                    <list name="ComponentList" optional="false">
                                        <count_field min_count="1" max_count="255" field_type_unsigned="unsigned byte"/>
                                        <record name="ComponentRec" optional="false">
                                            <presence_vector field_type_unsigned="unsigned byte"/>
                                            <fixed_field name="ComponentID" optional="false" interpretation="Use 255 if service information from  components in the node are required" field_type="unsigned byte" field_units="one">
                                                <value_set offset_to_lower_limit="false">
                                                    <value_enum enum_index="0" enum_const="Reserved"/>
                                                    <value_enum enum_index="255" enum_const="All components in                         the subsystem"/>
                                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="254" upper_limit_type="inclusive" interpretation="Valid Component IDs"/>
                                                </value_set>
                                            </fixed_field>
                                            <variable_length_string name="SearchFilter" optional="true" interpretation="An optional filter to apply to the search results. Only service identifiers that contain this string should be returned.">
                                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                            </variable_length_string>
                                        </record>
                                    </list>
                                </sequence>
                            </list>
                        </sequence>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="RegisterServices" message_id="0B00" is_command="true">
                <description xml:space="preserve">This message allows a component to register its capabilities with a Discovery service.  If a component ID is specified in the JAUS Reference Architecture version 3.2+, it may report only one service beyond the core message support, and this service must be equal to the component ID.  If a component ID is not listed in the RA, it may report any number of services.  For example, a component with ID 33 must provide only service 33. The exception to this rule is component ID 1 (the Node Manager) which may provide any number of services in addition to core message support. Note that this restriction may be removed in future versions of this Standard.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="RegisterServicesBody">
                    <list name="ServiceList" optional="false">
                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        <record name="ServiceRec" optional="false">
                            <variable_length_string name="URI" optional="false" interpretation="Service URI">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                            </variable_length_string>
                            <fixed_field name="MajorVersionNumber" optional="false" interpretation="Major version number of the service" field_type="unsigned byte" field_units="one"/>
                            <fixed_field name="MinorVersionNumber" optional="false" interpretation="Minor version number of the service" field_type="unsigned byte" field_units="one"/>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ReportIdentification" message_id="4B00" is_command="false">
                <description xml:space="preserve">This message shall provide the requesting component an identification summary of the Subsystem, Node, or Component.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="ReportIdentificationRec" optional="false">
                        <fixed_field name="QueryType" optional="false" field_type="unsigned byte" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="Reserved"/>
                                <value_enum enum_index="1" enum_const="System Identification"/>
                                <value_enum enum_index="2" enum_const="Subsystem Identification"/>
                                <value_enum enum_index="3" enum_const="Node Identification"/>
                                <value_enum enum_index="4" enum_const="Component Identification"/>
                                <value_range lower_limit="5" lower_limit_type="inclusive" upper_limit="255" upper_limit_type="inclusive" interpretation="Reserved"/>
                            </value_set>
                        </fixed_field>
                        <fixed_field name="Type" optional="false" interpretation="This field identifies the particular unmanned vehicle (subsystem) type, node type or component type based on the following enumeration" field_type="unsigned short integer" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="RESERVED"/>
                                <value_enum enum_index="10001" enum_const="VEHICLE"/>
                                <value_enum enum_index="20001" enum_const="OCU"/>
                                <value_enum enum_index="30001" enum_const="OTHER_SUBSYSTEM"/>
                                <value_enum enum_index="40001" enum_const="NODE"/>
                                <value_enum enum_index="50001" enum_const="PAYLOAD"/>
                                <value_enum enum_index="60001" enum_const="COMPONENT"/>
                                <value_range lower_limit="10002" lower_limit_type="inclusive" upper_limit="20000" upper_limit_type="inclusive" interpretation="Reserved"/>
                                <value_range lower_limit="20002" lower_limit_type="inclusive" upper_limit="30000" upper_limit_type="inclusive" interpretation="Reserved"/>
                                <value_range lower_limit="30002" lower_limit_type="inclusive" upper_limit="40000" upper_limit_type="inclusive" interpretation="Reserved"/>
                                <value_range lower_limit="40002" lower_limit_type="inclusive" upper_limit="50000" upper_limit_type="inclusive" interpretation="Reserved"/>
                                <value_range lower_limit="50002" lower_limit_type="inclusive" upper_limit="60000" upper_limit_type="inclusive" interpretation="Reserved"/>
                                <value_range lower_limit="60002" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Reserved"/>
                            </value_set>
                        </fixed_field>
                        <variable_length_string name="Identification" optional="false" interpretation="Human-recognizable name of the Subsystem, Node or Component.">
                            <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        </variable_length_string>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportConfiguration" message_id="4B01" is_command="false">
                <description xml:space="preserve">This message is used to provide the receiver a table of all existing components located on the source's subsystem or node depending on the value of field 1 of the Code 2B01h: Query Configuration message.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="NodeList" optional="false" interpretation="# of Nodes reported. For a single Node Report this field shall be 1">
                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        <sequence name="NodeSeq" optional="false">
                            <record name="NodeRec" optional="false">
                                <fixed_field name="NodeID" optional="false" interpretation="Node ID.  For single Node or Component reporting this field shall contain the Node ID as specified in the Destination Address of the Query Configuration message" field_type="unsigned byte" field_units="one"/>
                            </record>
                            <list name="ComponentList" optional="false">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                <record name="ComponentRec" optional="false">
                                    <fixed_field name="ComponentID" optional="false" interpretation="Component ID. For Single Component reporting this field shall contain the Component ID as specified in the Destination Address of the Query Configuration message and shall be the only Component reported" field_type="unsigned byte" field_units="one"/>
                                    <fixed_field name="InstanceID" optional="false" interpretation="Inst ID when legacy Components are reported; a value of zero (0) shall be used for non-legacy components." field_type="unsigned byte" field_units="one"/>
                                </record>
                            </list>
                        </sequence>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportSubsystemList" message_id="4B02" is_command="false">
                <description xml:space="preserve">This message shall provide the receiving component a table of all subsystems located in the source's system.  It also provides the ID of the component to send a Query Configuration message within the subsystem.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="SubsystemList" optional="false">
                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        <record name="SubsystemRec" optional="false">
                            <fixed_field name="SubsystemID" optional="false" interpretation="Subsystem ID" field_type="unsigned short integer" field_units="one"/>
                            <fixed_field name="NodeID" optional="false" interpretation="Node ID used for Query Configuration." field_type="unsigned byte" field_units="one"/>
                            <fixed_field name="ComponentID" optional="false" interpretation="Component ID used for Query Configuration." field_type="unsigned byte" field_units="one"/>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportServices" message_id="4B03" is_command="false">
                <description xml:space="preserve">This message allows a component to publish its capabilities, according to the Service Dictionary presented below.  If a component ID is specified in the RA, it may report only one service in beyond the core message support, and this service must be equal to the component ID.  If a component ID is not listed in the RA, it may report any number of services.  For example, a component with ID 33 must provide only service 33. The exception to this rule is component ID 1 (the Node Manager) which may provide any number of services in addition to core message support.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="NodeList" optional="false" interpretation="# of Nodes reported. For a single Node Report this field shall be 1">
                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                        <sequence name="NodeSeq" optional="false">
                            <record name="NodeRec" optional="false">
                                <fixed_field name="NodeID" optional="false" interpretation="Node ID.  For single Node or Component reporting this field shall contain the Node ID as specified in the Destination Address of the Query Configuration message" field_type="unsigned byte" field_units="one"/>
                            </record>
                            <list name="ComponentList" optional="false">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                <sequence name="ComponentSeq" optional="false">
                                    <record name="ComponentRec" optional="false">
                                        <fixed_field name="ComponentID" optional="false" interpretation="Component ID.  For Single Component reporting this field shall contain the Component ID as specified in the Destination Address of the Query Configuration message and shall be the only Component reported" field_type="unsigned byte" field_units="one"/>
                                        <fixed_field name="InstanceID" optional="false" interpretation="Inst ID when legacy Components are reported; a value of zero (0) shall be used for non-legacy components." field_type="unsigned byte" field_units="one"/>
                                    </record>
                                    <list name="ServiceList" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                        <record name="ServiceRec" optional="false">
                                            <variable_length_string name="URI" optional="false">
                                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                            </variable_length_string>
                                            <fixed_field name="MajorVersionNumber" optional="false" field_type="unsigned byte" field_units="one"/>
                                            <fixed_field name="MinorVersionNumber" optional="false" field_type="unsigned byte" field_units="one"/>
                                        </record>
                                    </list>
                                </sequence>
                            </list>
                        </sequence>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportServiceList" message_id="4B04" is_command="false">
                <description xml:space="preserve">This message allows a component to publish its capabilities, according to the Service Dictionary presented below.  If a component ID is specified in the RA, it may report only one service in beyond the core message support, and this service must be equal to the component ID.  If a component ID is not listed in the RA, it may report any number of services.  For example, a component with ID 33 must provide only service 33. The exception to this rule is component ID 1 (the Node Manager) which may provide any number of services in addition to core message support.</description>
                <header name="MsgHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="SubsystemList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <sequence name="SubsystemSeq" optional="false">
                            <record name="SubsystemRec" optional="false">
                                <fixed_field name="SubsystemID" optional="false" interpretation="Subsystem ID" field_type="unsigned short integer" field_units="one"/>
                            </record>
                            <list name="NodeList" optional="false" interpretation="# of Nodes reported. For a single Node Report this field shall be 1">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                <sequence name="NodeSeq" optional="false">
                                    <record name="NodeRec" optional="false">
                                        <fixed_field name="NodeID" optional="false" interpretation="Node ID. For single Node or Component reporting this field shall contain the Node ID as specified in the Destination Address of the Query Configuration message" field_type="unsigned byte" field_units="one"/>
                                    </record>
                                    <list name="ComponentList" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                        <sequence name="ComponentSeq" optional="false">
                                            <record name="ComponentRec" optional="false">
                                                <fixed_field name="ComponentID" optional="false" interpretation="Component ID.  For Single Component reporting this field shall contain the Component ID as specified in the Destination Address of the Query Configuration message and shall be the only Component reported" field_type="unsigned byte" field_units="one"/>
                                                <fixed_field name="InstanceID" optional="false" interpretation="Inst ID when legacy Components are reported; a value of zero (0) shall be used for non-legacy components." field_type="unsigned byte" field_units="one"/>
                                            </record>
                                            <list name="ServiceList" optional="false">
                                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                                <record name="ServiceRec" optional="false">
                                                    <variable_length_string name="URI" optional="false">
                                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                                    </variable_length_string>
                                                    <fixed_field name="MajorVersionNumber" optional="false" field_type="unsigned byte" field_units="one"/>
                                                    <fixed_field name="MinorVersionNumber" optional="false" field_type="unsigned byte" field_units="one"/>
                                                </record>
                                            </list>
                                        </sequence>
                                    </list>
                                </sequence>
                            </list>
                        </sequence>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="events.transport.ReceiveFSM" state_name="Receiving.Ready"/>
        <start state_machine_name="events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready">
                    <default_state>
                        <transition name="transport.Receive">
                            <parameter type="QueryIdentification" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="transport.Send" interpretation="Send a Report                 Identification                 message               to querying                 client">
                                <argument value=" 'ReportIdentification' "/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="transport.Receive">
                            <parameter type="QueryConfiguration" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="transport.Send" interpretation="Send a Report                 Configuration                 message               to querying                 client">
                                <argument value=" 'ReportConfiguration' "/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="transport.Receive">
                            <parameter type="QuerySubsystemList" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="transport.Send" interpretation="Send a Report                 Subsystem List                 message               to querying                 client">
                                <argument value="'ReportSubsystemList'"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="transport.Receive">
                            <parameter type="QueryServices" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="transport.Send" interpretation="Send a Report                 Services message                 to querying client">
                                <argument value=" 'ReportServices' "/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="transport.Receive">
                            <parameter type="QueryServiceList" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="transport.Send" interpretation="Send a Report                 Service List                    message to querying client">
                                <argument value=" 'ReportServiceList' "/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="transport.Receive">
                            <parameter type="RegisterServices" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <internal/>
                            <action name="PublishServices" interpretation="Add the component                 that sent the message                 to the list of reported                 services">
                                <argument value="msg"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                    </default_state>
                </state>
            </state>
        </state_machine>
        <state_machine name="events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
