<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="DigitalAudioOutput" id="urn:jaus:jss:environmentSensing:DigitalAudioOutput" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The Digital Audio Output Service allows a client to specify an RTSP stream as an audio source. The service is expected to connect, decode, and play the specified stream, presumably over one or more speakers. This can be used to send live audio to a speaker or annunciator on the platform, or playback a prerecorded message. The Capabilities message can be used to determine what codecs the implementation supports.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost or reordered.</assumptions>
    <references>
        <inherits_from name="accessControl" id="urn:jaus:jss:core:AccessControl" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="SetDigitalAudioOutputSource" message_id="0818" is_command="true">
                <description xml:space="preserve">This message is used to specify the stream source to play.  Note that the specified stream must not require a DNS lookup to resolve.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="DigitalAudioOutputSeq" optional="false">
                        <record name="RequestIdRec" optional="false">
                            <fixed_field name="RequestID" optional="false" field_type="unsigned byte" field_units="one"/>
                        </record>
                        <list name="DigitalAudioOutputSourceList" optional="false">
                            <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                            <record name="DigitalAudioOutputSourceRec" optional="false">
                                <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                    </value_set>
                                </fixed_field>
                                <variable_length_string name="StreamURL" optional="false" interpretation="URL of the source of the stream. This URL should not require a DNS to resolve; hence, an IP address should be substituted for a host name.">
                                    <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                </variable_length_string>
                                <fixed_field name="Repeat" optional="false" interpretation="Specifies behavior for RTSP streams that have a finite play time." field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="PlayOnce"/>
                                        <value_enum enum_index="1" enum_const="RepeatUntilNewStreamSpecified"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="Volume" optional="false" interpretation="The gain or volume applied to the input as a percent. A value of 0% indicates that no output signal is generated, while a value of 100% indicates that maximum amplification is applied to the input." field_type="unsigned short integer" field_units="percent">
                                    <scale_range real_lower_limit="0" real_upper_limit="100" integer_function="round"/>
                                </fixed_field>
                            </record>
                        </list>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryDigitalAudioOutputSource" message_id="2818" is_command="false">
                <description xml:space="preserve">This message is used to query the stream source currently being played for each sensor.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="QueryDigitalAudioRec" optional="false">
                        <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="AllSensors"/>
                                <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                            </value_set>
                        </fixed_field>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryDigitalAudioOutputCapabilities" message_id="2819" is_command="false">
                <description xml:space="preserve">This message is used to query the full set of capabilities (supported performance levels) for one or more sensors.  A SensorID of zero (0) may be used to query all sensors supported by the service in a single message.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <record name="QueryDigitalAudioRec" optional="false">
                        <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                            <value_set offset_to_lower_limit="false">
                                <value_enum enum_index="0" enum_const="AllSensors"/>
                                <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                            </value_set>
                        </fixed_field>
                    </record>
                </body>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ConfirmSensorConfiguration" message_id="0801" is_command="false">
                <description xml:space="preserve">This message is used to notify a client component that the configuration has been received with the values specified in the corresponding set message with Request ID matching the value of field 1 of this message. If the specified configuration request is deemed valid, the SensorIdRec is returned with the matching SensorID (or illuminatorID) of the 
			sensor (or illuminator) for which the configuration was successfully 
			set. If the requested configuration is invalid, one of the ErrorRec 
			types shall be returned (depending on the source message) with 
			an error code and description of the configuration setting which 
			was deemed invalid.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="ConfirmSensorConfigurationSequence" optional="false">
                        <record name="RequestIdRec" optional="false">
                            <fixed_field name="RequestID" optional="false" field_type="unsigned byte" field_units="one"/>
                        </record>
                        <list name="ConfirmSensorList" optional="false">
                            <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                            <variant name="ConfirmSensorConfigurationVariant" optional="false">
                                <vtag_field min_count="0" max_count="9" field_type_unsigned="unsigned byte"/>
                                <record name="SensorIdRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                </record>
                                <record name="RangeSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="RangeSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Horizontal Field of View"/>
                                            <value_enum enum_index="2" enum_const="Invalid Vertical Field of View"/>
                                            <value_enum enum_index="3" enum_const="Invalid Update Rate"/>
                                            <value_enum enum_index="4" enum_const="Invalid Sensor Range"/>
                                            <value_enum enum_index="5" enum_const="Invalid Sensor State"/>
                                            <value_enum enum_index="6" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="VisualSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="VisualSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Sensor State"/>
                                            <value_enum enum_index="2" enum_const="Invalid Zoom Mode"/>
                                            <value_enum enum_index="3" enum_const="Invalid Zoom Value"/>
                                            <value_enum enum_index="4" enum_const="Invalid Focus Mode"/>
                                            <value_enum enum_index="5" enum_const="Invalid Focus Value"/>
                                            <value_enum enum_index="6" enum_const="Invalid White Balance"/>
                                            <value_enum enum_index="7" enum_const="Invalid Imaging Mode"/>
                                            <value_enum enum_index="8" enum_const="Invalid Exposure Mode"/>
                                            <value_enum enum_index="9" enum_const="Invalid Metering Mode"/>
                                            <value_enum enum_index="10" enum_const="Invalid Shutter Speed"/>
                                            <value_enum enum_index="11" enum_const="Invalid Aperture Value"/>
                                            <value_enum enum_index="12" enum_const="Invalid Light Sensitivity"/>
                                            <value_enum enum_index="13" enum_const="Invalid Image Stabilization"/>
                                            <value_enum enum_index="14" enum_const="Invalid Horizontal FOV"/>
                                            <value_enum enum_index="15" enum_const="Invalid Vertical FOV"/>
                                            <value_enum enum_index="16" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalVideoSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalVideoErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Minimum Bit Rate"/>
                                            <value_enum enum_index="2" enum_const="Invalid Maximum Bit Rate"/>
                                            <value_enum enum_index="3" enum_const="Requested Frame Rate Too Low"/>
                                            <value_enum enum_index="4" enum_const="Requested Frame Rate Too High"/>
                                            <value_enum enum_index="5" enum_const="Invalid Frame Size"/>
                                            <value_enum enum_index="6" enum_const="Invalid Format"/>
                                            <value_enum enum_index="7" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="AnalogVideoSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="AnalogVideoErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Format"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="StillImageSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="StillImageErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Frame Size"/>
                                            <value_enum enum_index="2" enum_const="Invalid Format"/>
                                            <value_enum enum_index="3" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="H264VideoEncodingErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="H264VideoEncodingErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Profile"/>
                                            <value_enum enum_index="2" enum_const="Invalid Preset"/>
                                            <value_enum enum_index="3" enum_const="Invalid GroupOfPictures"/>
                                            <value_enum enum_index="4" enum_const="Invalid GDR"/>
                                            <value_enum enum_index="5" enum_const="Invalid RegionOfInterest"/>
                                            <value_enum enum_index="6" enum_const="Invalid IntraMacroRefresh"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalAudioSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalAudioSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid BitRate"/>
                                            <value_enum enum_index="2" enum_const="Invalid Format"/>
                                            <value_enum enum_index="3" enum_const="Invalid SampleRate"/>
                                            <value_enum enum_index="4" enum_const="Invalid BitDepth"/>
                                            <value_enum enum_index="5" enum_const="Invalid EncodingQuality"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalAudioOutputErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalAudioOutputErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Stream Not Found"/>
                                            <value_enum enum_index="2" enum_const="Stream Not Supported"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="VideoIlluminatorErrorRec" optional="false">
                                    <fixed_field name="IlluminatorID" optional="false" field_type="unsigned short integer" field_units="one"/>
                                    <fixed_field name="VideoIlluminatorErrorRecCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Unsupported Mode"/>
                                            <value_enum enum_index="2" enum_const="Unsupported Beam Width"/>
                                            <value_enum enum_index="3" enum_const="Unsupported Beam Height"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                            </variant>
                        </list>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportDigitalAudioOutputSource" message_id="4818" is_command="false">
                <description xml:space="preserve">This message is used to report the stream currently being played for each queried sensor.  An empty StreamURL implies that no stream is being played.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="DigitalAudioOutputSourceList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="DigitalAudioOutputSourceRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                </value_set>
                            </fixed_field>
                            <variable_length_string name="StreamURL" optional="false" interpretation="URL of the source of the stream. This URL should not require a DNS to resolve; hence, an IP address should be substituted for a host name.">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                            </variable_length_string>
                            <fixed_field name="Repeat" optional="false" interpretation="Specifies behavior for RTSP streams that have a finite play time." field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="PlayOnce"/>
                                    <value_enum enum_index="1" enum_const="RepeatUntilNewStreamSpecified"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="Volume" optional="false" interpretation="The gain or volume applied to the input as a percent. A value of 0% indicates that no output signal is generated, while a value of 100% indicates that maximum amplification is applied to the input." field_type="unsigned short integer" field_units="percent">
                                <scale_range real_lower_limit="0" real_upper_limit="100" integer_function="round"/>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportDigitalAudioOutputCapabilities" message_id="4819" is_command="false">
                <description xml:space="preserve">This message is used to report full set of capabilities (supported performance levels) for one or more sensors.</description>
                <header name="JAUSApplicationLayerHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="DigitalAudioOutputCapabilitiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="DigitalAudioOutputCapabilitiesRec" optional="false">
                            <presence_vector field_type_unsigned="unsigned byte"/>
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="MinimumAllowedBitRate" optional="true" interpretation="kilobits per second" field_type="unsigned short integer" field_units="one"/>
                            <fixed_field name="MaximumAllowedBitRate" optional="true" interpretation="kilobits per second" field_type="unsigned short integer" field_units="one"/>
                            <bit_field name="SupportedDigitalFormats" optional="true" field_type_unsigned="unsigned integer">
                                <sub_field name="LPCM_PCM">
                                    <bit_range from_index="0" to_index="0" interpretation="LPCM_PCM"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="AIFF">
                                    <bit_range from_index="1" to_index="1" interpretation="AIFF"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="WAV">
                                    <bit_range from_index="2" to_index="2" interpretation="WAV"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ALAC">
                                    <bit_range from_index="3" to_index="3" interpretation="ALAC"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="FLAC">
                                    <bit_range from_index="4" to_index="4" interpretation="FLAC"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="RealAudio">
                                    <bit_range from_index="5" to_index="5" interpretation="RealAudio"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="WMA9_Lossless">
                                    <bit_range from_index="6" to_index="6" interpretation="WMA9_Lossless"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="TrueAudio">
                                    <bit_range from_index="7" to_index="7" interpretation="TrueAudio"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="DolbyDigital">
                                    <bit_range from_index="8" to_index="8" interpretation="DolbyDigital"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="DTS">
                                    <bit_range from_index="9" to_index="9" interpretation="DTS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="MP2">
                                    <bit_range from_index="10" to_index="10" interpretation="MP2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="MP3">
                                    <bit_range from_index="11" to_index="11" interpretation="MP3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="AAC_MPEG2">
                                    <bit_range from_index="12" to_index="12" interpretation="AAC_MPEG2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="AAC_MPEG4">
                                    <bit_range from_index="13" to_index="13" interpretation="AAC_MPEG4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="VORBIS">
                                    <bit_range from_index="14" to_index="14" interpretation="VORBIS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="WMA">
                                    <bit_range from_index="15" to_index="15" interpretation="WMA"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Speex">
                                    <bit_range from_index="16" to_index="16" interpretation="Speex"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <fixed_field name="MinSampleRate" optional="true" interpretation="Samples per second" field_type="unsigned integer" field_units="one"/>
                            <fixed_field name="MaxSampleRate" optional="true" interpretation="Samples per second" field_type="unsigned integer" field_units="one"/>
                            <bit_field name="SupportedBitDepths" optional="true" field_type_unsigned="unsigned short integer">
                                <sub_field name="EIGHT_BITS">
                                    <bit_range from_index="0" to_index="0" interpretation="EIGHT_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="TEN_BITS">
                                    <bit_range from_index="1" to_index="1" interpretation="TEN_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="TWELVE_BITS">
                                    <bit_range from_index="2" to_index="2" interpretation="TWELVE_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="FOURTEEN_BITS">
                                    <bit_range from_index="3" to_index="3" interpretation="FOURTEEN_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="SIXTEEN_BITS">
                                    <bit_range from_index="4" to_index="4" interpretation="SIXTEEN_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="TWENTY_BITS">
                                    <bit_range from_index="5" to_index="5" interpretation="TWENTY_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="TWENTY_FOUR_BITS">
                                    <bit_range from_index="6" to_index="6" interpretation="TWENTY_FOUR_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="THIRTY_TWO_BITS">
                                    <bit_range from_index="7" to_index="7" interpretation="THIRTY_TWO_BITS"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                        <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="accessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="accessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                        <default_state>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryDigitalAudioOutputSource" value="msg" interpretation="enveloped Query Digital Audio OutputSource message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
                                <internal/>
                                <action name="sendReportDigitalAudioOutputSource" interpretation="Send a ReportDigitalAudioOutputSource message to querying client">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryDigitalAudioOutputCapabilities" value="msg" interpretation="enveloped Query Digital Audio Output Capabilities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
                                <internal/>
                                <action name="sendReportDigitalAudioOutputCapabilities" interpretation="Send a ReportDigitalAudioOutputCapabilities message to querying client">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                        <default_state>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryDigitalAudioOutputSource" value="msg" interpretation="enveloped Query Digital Audio OutputSource message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
                                <internal/>
                                <action name="sendReportDigitalAudioOutputSource" interpretation="Send a ReportDigitalAudioOutputSource message to querying client">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryDigitalAudioOutputCapabilities" value="msg" interpretation="enveloped Query Digital Audio Output Capabilities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
                                <internal/>
                                <action name="sendReportDigitalAudioOutputCapabilities" interpretation="Send a ReportDigitalAudioOutputCapabilities message to querying client">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="SetDigitalAudioOutputSource" value="msg" interpretation="enveloped Set Digital Audio Output Source message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
                                <guard condition="isControllingClient( transportData )" interpretation="True if the command message was received from the client currently controlling this component."/>
                                <internal/>
                                <action name="playStream" interpretation="Begin playback for any sensor IDs with valid and supported streams specified in the message with the given repeat behavior and volume.">
                                    <argument value="msg"/>
                                </action>
                                <action name="sendConfirmSensorConfiguration" interpretation="Send sendConfirmSensorConfiguration message with confirmation or error code for each specified sensor ID">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state/>
                </state>
            </state>
        </state_machine>
        <state_machine name="accessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
