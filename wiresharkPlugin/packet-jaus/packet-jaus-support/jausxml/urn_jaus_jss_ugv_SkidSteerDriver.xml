<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="SkidSteerDriver" id="urn:jaus:jss:ugv:SkidSteerDriver" version="1.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The SkidSteer Driver provides the means to control skid steer vehicles</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost or reordered.</assumptions>
    <references>
        <inherits_from name="management" id="urn:jaus:jss:core:Management" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="SetSkidSteerEffort" message_id="0501" is_command="true">
                <description xml:space="preserve">Sets skid steer driver parameters</description>
                <header name="header">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="Two byte field to hold message ID" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="body">
                    <record name="skidSteerData" optional="false" interpretation="Negative is reverse, positive is forward">
                        <fixed_field name="LeftSidePropulsiveEffort" optional="false" interpretation="As a percent of maximum.  Positive results in forward thrust, while negative results in backward thrust." field_type="unsigned short integer" field_units="one">
                            <scale_range real_lower_limit="-100.0" real_upper_limit="100.0" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="RightSidePropulsiveEffort" optional="false" interpretation="As a percent of maximum.  Positive results in forward thrust, while negative results in backward thrust." field_type="unsigned short integer" field_units="one">
                            <scale_range real_lower_limit="-100.0" real_upper_limit="100.0" integer_function="round"/>
                        </fixed_field>
                    </record>
                </body>
                <footer name="footer"/>
            </message_def>
            <message_def name="QuerySkidSteerEffort" message_id="2501" is_command="false">
                <description xml:space="preserve">Queries skid steer driver for current set data</description>
                <header name="header">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="Two byte field to hold message ID" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="body"/>
                <footer name="footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ReportSkidSteerEffort" message_id="4501" is_command="false">
                <description xml:space="preserve">Reports the commanded effort</description>
                <header name="header">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="Two byte field to hold message ID" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="body">
                    <record name="skidSteerData" optional="false" interpretation="Negative is reverse, positive is forward">
                        <fixed_field name="LeftSidePropulsiveEffort" optional="false" interpretation="As a percent of maximum.  Positive implies forward thrust, while negative results in backward thrust." field_type="unsigned short integer" field_units="one">
                            <scale_range real_lower_limit="-100.0" real_upper_limit="100.0" integer_function="round"/>
                        </fixed_field>
                        <fixed_field name="RightSidePropulsiveEffort" optional="false" interpretation="As a percent of maximum.  Positive implies forward thrust, while negative results in backward thrust." field_type="unsigned short integer" field_units="one">
                            <scale_range real_lower_limit="-100.0" real_upper_limit="100.0" integer_function="round"/>
                        </fixed_field>
                    </record>
                </body>
                <footer name="footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior>
        <start state_machine_name="management.accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="management.accessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="management.accessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                        </state>
                        <state name="NotAvailable" initial_state="Init">
                            <state name="Init"/>
                            <state name="Failure"/>
                            <state name="Shutdown"/>
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="management.accessControl.events.transport.Receive">
                                <parameter type="QuerySkidSteerEffort" value="msg" interpretation="enveloped query skid                                                     steer effort message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportSkidSteerEffort" interpretation="Send a Report                                                     Skid Steer Effort message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available" initial_state="Standby">
                            <state name="Standby"/>
                            <state name="Ready">
                                <exit>
                                    <action name="stopMotion" interpretation="When leaving the Ready state,                                                          stop motion on all tracks."/>
                                </exit>
                                <transition name="management.accessControl.events.transport.Receive">
                                    <parameter type="SetSkidSteerEffort" value="msg" interpretation="enveloped set skid steer                                                         effort message"/>
                                    <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                    <guard condition="isControllingClient( transportData )" interpretation="True if the message that triggered the transition is received from the                                                          client that is in control of this service"/>
                                    <internal/>
                                    <action name="setSkidSteerEffort" interpretation="Set the actuator effort level for each                                                          track of the vehicle.">
                                        <argument value="msg"/>
                                    </action>
                                </transition>
                            </state>
                        </state>
                        <state name="NotAvailable" initial_state="Emergency">
                            <state name="Emergency"/>
                        </state>
                        <default_state>
                            <transition name="management.accessControl.events.transport.Receive">
                                <parameter type="QuerySkidSteerEffort" value="msg" interpretation="enveloped query skid                                                     steer effort message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportSkidSteerEffort" interpretation="Send a Report                                                     Skid Steer Effort message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state/>
                </state>
            </state>
        </state_machine>
        <state_machine name="management.accessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
