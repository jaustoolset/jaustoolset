<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="VideoIlluminator" id="urn:jaus:jss:environmentSensing:VideoIlluminator" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The Video Illuminator Service provides support for and control of Illumination devices associated with video streaming. The Video Illuminator Service is associated with specific cameras by implementing both the video service and the illuminator service within a single enclosing component, and correlating the Illuminator ID with one or more Sensor IDs in the Capabilities message.</description>
    <assumptions xml:space="preserve"></assumptions>
    <references>
        <inherits_from name="AccessControl" id="urn:jaus:jss:core:AccessControl" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="SetVideoIlluminatorConfiguration" message_id="081A" is_command="true">
                <description xml:space="preserve">This message commands a level of illumination output to the device associated with the specified illuminatorID.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="IlluminatorSeq" optional="false">
                        <record name="RequestIdRec" optional="false">
                            <fixed_field name="RequestID" optional="false" field_type="unsigned byte" field_units="one"/>
                        </record>
                        <list name="IlluminatorList" optional="false">
                            <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                            <record name="IlluminatorRec" optional="false">
                                <presence_vector field_type_unsigned="unsigned byte"/>
                                <fixed_field name="IlluminatorID" optional="false" interpretation="Identifies an illumination device supported by the service. Zero is not a valid value." field_type="unsigned short integer" field_units="one"/>
                                <fixed_field name="Level" optional="false" interpretation="Desired intensity level, as a percent of capability. If the illuminator does not support variable levels of brightness, any non-zero value shall be interpreted as on, and a zero level value shall be interpreted as off." field_type="unsigned short integer" field_units="percent">
                                    <scale_range real_lower_limit="0" real_upper_limit="100" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="Mode" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="VISIBLE"/>
                                        <value_enum enum_index="1" enum_const="INFRARED"/>
                                        <value_enum enum_index="2" enum_const="GREYSCALE"/>
                                        <value_enum enum_index="3" enum_const="LOWLIGHT"/>
                                        <value_range lower_limit="4" lower_limit_type="inclusive" upper_limit="20" upper_limit_type="inclusive" interpretation="These values are reserved for future use"/>
                                        <value_range lower_limit="21" lower_limit_type="inclusive" upper_limit="31" upper_limit_type="inclusive" interpretation="These values are reserved for program- or implementation-specific use"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="BeamWidth" optional="true" field_type="unsigned short integer" field_units="degree">
                                    <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="BeamHeight" optional="true" field_type="unsigned short integer" field_units="degree">
                                    <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                                </fixed_field>
                            </record>
                        </list>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryVideoIlluminatorConfiguration" message_id="281A" is_command="false">
                <description xml:space="preserve">This message requests a report of the commanded illumination output level of the illuminator device associated with the specified illuminatorID(s).</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="IlluminatorIDList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="IlluminatorIDRec" optional="false">
                            <fixed_field name="IlluminatorID" optional="false" interpretation="Identifies an illumination device supported by the service. A value of zero shall be interpreted as query for all available illuminators." field_type="unsigned short integer" field_units="one"/>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryVideoIlluminatorCapabilities" message_id="281B" is_command="false">
                <description xml:space="preserve">This message requests a report of the capabilities of the illuminator device associated with the specified illuminatorID(s).</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="IlluminatorIDList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="IlluminatorIDRec" optional="false">
                            <fixed_field name="IlluminatorID" optional="false" interpretation="Identifies an illumination device supported by the service. A value of zero shall be interpreted as query for all available illuminators." field_type="unsigned short integer" field_units="one"/>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ConfirmSensorConfiguration" message_id="0801" is_command="false">
                <description xml:space="preserve">This message is used to notify a client component that the configuration has been received with the values specified in the corresponding set message with Request ID matching the value of field 1 of this message. If the specified configuration request is deemed valid, the SensorIdRec is returned with the matching SensorID (or illuminatorID) of the 
			sensor (or illuminator) for which the configuration was successfully 
			set. If the requested configuration is invalid, one of the ErrorRec 
			types shall be returned (depending on the source message) with 
			an error code and description of the configuration setting which 
			was deemed invalid.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="ConfirmSensorConfigurationSequence" optional="false">
                        <record name="RequestIdRec" optional="false">
                            <fixed_field name="RequestID" optional="false" field_type="unsigned byte" field_units="one"/>
                        </record>
                        <list name="ConfirmSensorList" optional="false">
                            <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                            <variant name="ConfirmSensorConfigurationVariant" optional="false">
                                <vtag_field min_count="0" max_count="9" field_type_unsigned="unsigned byte"/>
                                <record name="SensorIdRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                </record>
                                <record name="RangeSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="RangeSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Horizontal Field of View"/>
                                            <value_enum enum_index="2" enum_const="Invalid Vertical Field of View"/>
                                            <value_enum enum_index="3" enum_const="Invalid Update Rate"/>
                                            <value_enum enum_index="4" enum_const="Invalid Sensor Range"/>
                                            <value_enum enum_index="5" enum_const="Invalid Sensor State"/>
                                            <value_enum enum_index="6" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="VisualSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="VisualSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Sensor State"/>
                                            <value_enum enum_index="2" enum_const="Invalid Zoom Mode"/>
                                            <value_enum enum_index="3" enum_const="Invalid Zoom Value"/>
                                            <value_enum enum_index="4" enum_const="Invalid Focus Mode"/>
                                            <value_enum enum_index="5" enum_const="Invalid Focus Value"/>
                                            <value_enum enum_index="6" enum_const="Invalid White Balance"/>
                                            <value_enum enum_index="7" enum_const="Invalid Imaging Mode"/>
                                            <value_enum enum_index="8" enum_const="Invalid Exposure Mode"/>
                                            <value_enum enum_index="9" enum_const="Invalid Metering Mode"/>
                                            <value_enum enum_index="10" enum_const="Invalid Shutter Speed"/>
                                            <value_enum enum_index="11" enum_const="Invalid Aperture Value"/>
                                            <value_enum enum_index="12" enum_const="Invalid Light Sensitivity"/>
                                            <value_enum enum_index="13" enum_const="Invalid Image Stabilization"/>
                                            <value_enum enum_index="14" enum_const="Invalid Horizontal FOV"/>
                                            <value_enum enum_index="15" enum_const="Invalid Vertical FOV"/>
                                            <value_enum enum_index="16" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalVideoSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalVideoErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Minimum Bit Rate"/>
                                            <value_enum enum_index="2" enum_const="Invalid Maximum Bit Rate"/>
                                            <value_enum enum_index="3" enum_const="Requested Frame Rate Too Low"/>
                                            <value_enum enum_index="4" enum_const="Requested Frame Rate Too High"/>
                                            <value_enum enum_index="5" enum_const="Invalid Frame Size"/>
                                            <value_enum enum_index="6" enum_const="Invalid Format"/>
                                            <value_enum enum_index="7" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="AnalogVideoSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="AnalogVideoErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Format"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="StillImageSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="StillImageErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Frame Size"/>
                                            <value_enum enum_index="2" enum_const="Invalid Format"/>
                                            <value_enum enum_index="3" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="H264VideoEncodingErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="H264VideoEncodingErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Profile"/>
                                            <value_enum enum_index="2" enum_const="Invalid Preset"/>
                                            <value_enum enum_index="3" enum_const="Invalid GroupOfPictures"/>
                                            <value_enum enum_index="4" enum_const="Invalid GDR"/>
                                            <value_enum enum_index="5" enum_const="Invalid RegionOfInterest"/>
                                            <value_enum enum_index="6" enum_const="Invalid IntraMacroRefresh"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalAudioSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalAudioSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid BitRate"/>
                                            <value_enum enum_index="2" enum_const="Invalid Format"/>
                                            <value_enum enum_index="3" enum_const="Invalid SampleRate"/>
                                            <value_enum enum_index="4" enum_const="Invalid BitDepth"/>
                                            <value_enum enum_index="5" enum_const="Invalid EncodingQuality"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalAudioOutputErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalAudioOutputErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Stream Not Found"/>
                                            <value_enum enum_index="2" enum_const="Stream Not Supported"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="VideoIlluminatorErrorRec" optional="false">
                                    <fixed_field name="IlluminatorID" optional="false" field_type="unsigned short integer" field_units="one"/>
                                    <fixed_field name="VideoIlluminatorErrorRecCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Unsupported Mode"/>
                                            <value_enum enum_index="2" enum_const="Unsupported Beam Width"/>
                                            <value_enum enum_index="3" enum_const="Unsupported Beam Height"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                            </variant>
                        </list>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportVideoIlluminatorConfiguration" message_id="481A" is_command="false">
                <description xml:space="preserve">This message provides a report of the commanded illumination level of the illumination devices associated with the specified illuminatorID(s).</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="IlluminationRecList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="IlluminatorRec" optional="false">
                            <presence_vector field_type_unsigned="unsigned byte"/>
                            <fixed_field name="IlluminatorID" optional="false" interpretation="Identifies an illumination device supported by the service. Zero is not a valid value." field_type="unsigned short integer" field_units="one"/>
                            <fixed_field name="Level" optional="false" interpretation="Requested intensity level, as a percent of capability. If the illuminator does not support variable levels of brightness, any non-zero value shall be interpreted as on, and a zero level value shall be interpreted as off." field_type="unsigned short integer" field_units="percent">
                                <scale_range real_lower_limit="0" real_upper_limit="100" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="Mode" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="VISIBLE"/>
                                    <value_enum enum_index="1" enum_const="INFRARED"/>
                                    <value_enum enum_index="2" enum_const="GREYSCALE"/>
                                    <value_enum enum_index="3" enum_const="LOWLIGHT"/>
                                    <value_range lower_limit="4" lower_limit_type="inclusive" upper_limit="20" upper_limit_type="inclusive" interpretation="These values are reserved for future use"/>
                                    <value_range lower_limit="21" lower_limit_type="inclusive" upper_limit="31" upper_limit_type="inclusive" interpretation="These values are reserved for program- or implementation-specific use"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="BeamWidth" optional="true" field_type="unsigned short integer" field_units="degree">
                                <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="BeamHeight" optional="true" field_type="unsigned short integer" field_units="degree">
                                <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportVideoIlluminatorCapabilities" message_id="481B" is_command="false">
                <description xml:space="preserve">This message provides a report of the capabilities of the specified illuminator device.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="IlluminatorCapabilitiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <sequence name="IlluminatorCapabilitiesSeq" optional="false">
                            <record name="IlluminatorCapabilitiesRec" optional="false">
                                <presence_vector field_type_unsigned="unsigned byte"/>
                                <fixed_field name="IlluminatorID" optional="false" interpretation="Identifies an illumination device supported by the service. Zero is not a valid value." field_type="unsigned short integer" field_units="one"/>
                                <variable_length_string name="IlluminatorName" optional="false">
                                    <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                </variable_length_string>
                                <bit_field name="SupportedIlluminationModes" optional="false" field_type_unsigned="unsigned integer">
                                    <sub_field name="Visible" interpretation="Traditional white light source, visible to the human eye">
                                        <bit_range from_index="0" to_index="0"/>
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                            <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                        </value_set>
                                    </sub_field>
                                    <sub_field name="Infrared" interpretation="Traditional IR light source, invisible to the human eye">
                                        <bit_range from_index="1" to_index="1"/>
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                            <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                        </value_set>
                                    </sub_field>
                                    <sub_field name="GreyScale" interpretation="Illumination type suitable for use in greyscale imaging. Specific interpretation of this mode is not defined by the Standard, and may vary between implementations.">
                                        <bit_range from_index="2" to_index="2"/>
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                            <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                        </value_set>
                                    </sub_field>
                                    <sub_field name="LowLight" interpretation="Illumination type suitable for use in lowlight imaging. Specific interpretation of this mode is not defined by the Standard, and may vary between implementations.">
                                        <bit_range from_index="3" to_index="3"/>
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="NOT_SUPPORTED"/>
                                            <value_enum enum_index="1" enum_const="SUPPORTED"/>
                                        </value_set>
                                    </sub_field>
                                    <sub_field name="ReservedForFutureUse">
                                        <bit_range from_index="4" to_index="20"/>
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="0" lower_limit_type="inclusive" upper_limit="1" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </sub_field>
                                    <sub_field name="ReservedForProgramOrImplementationSpecificUse">
                                        <bit_range from_index="21" to_index="31"/>
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="0" lower_limit_type="inclusive" upper_limit="1" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </sub_field>
                                </bit_field>
                                <fixed_field name="MinimumIntensity" optional="true" interpretation="Minimum achievable brightness level. If this value is the same as the maximum, the illuminator is assumed to not support variable levels, and acts in an on/off fashion only." field_type="unsigned short integer" field_units="lumen"/>
                                <fixed_field name="MaximumIntensity" optional="true" interpretation="Maximum achievable brightness level. If this value is the same as the minimum, the illuminator is assumed to not support variable levels, and acts in an on/off fashion only." field_type="unsigned short integer" field_units="lumen"/>
                                <fixed_field name="MinimumSupportedBeamWidth" optional="true" field_type="unsigned short integer" field_units="degree">
                                    <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="MaximumSupportedBeamWidth" optional="true" field_type="unsigned short integer" field_units="degree">
                                    <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="MinimumSupportedBeamHeight" optional="true" field_type="unsigned short integer" field_units="degree">
                                    <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="MaximumSupportedBeamHeight" optional="true" field_type="unsigned short integer" field_units="degree">
                                    <scale_range real_lower_limit="0" real_upper_limit="360" integer_function="round"/>
                                </fixed_field>
                            </record>
                            <list name="SensorIDList" optional="false">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                <record name="SensorIDRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="SensorID of a camera associated with this illuminator." field_type="unsigned short integer" field_units="one"/>
                                </record>
                            </list>
                        </sequence>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="AccessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="AccessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="AccessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                        <default_state>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="SetVideoIlluminatorConfiguration" value="msg" interpretation="enveloped set message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <guard condition="isControllingClient( transportData )" interpretation="True if the message that triggered the transition is received from the client that is in control of this service"/>
                                <internal/>
                                <action name="setValidVideoIlluminatorConfigurationAction" interpretation="Set the illuminator configuration specified in the message if valid for the given ID">
                                    <argument value="msg"/>
                                </action>
                                <action name="sendConfirmSensorConfiguration" interpretation="Send sendConfirmSensorConfiguration message with confirmation or error code for each specified illuminator ID">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state>
                        <transition name="accessControl.events.transport.Receive">
                            <parameter type="QueryVideoIlluminatorCapabilities" value="msg" interpretation="enveloped query message"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                            <internal/>
                            <action name="sendReportVideoIlluminatorCapabilities" interpretation="Construct and send ReportVideoIlluminatorCapabilities to querying client">
                                <argument value="msg"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="accessControl.events.transport.Receive">
                            <parameter type="QueryVideoIlluminatorConfiguration" value="msg" interpretation="enveloped query message"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                            <internal/>
                            <action name="sendReportVideoIlluminatorConfiguration" interpretation="Construct and send ReportVideoIlluminatorConfiguration to querying client">
                                <argument value="msg"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                    </default_state>
                </state>
            </state>
        </state_machine>
        <state_machine name="AccessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
