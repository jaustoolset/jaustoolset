<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="VisualSensor" id="urn:jaus:jss:environmentSensing:VisualSensor" version="2.0" xmlns="urn:jaus:jsidl:1.1" xmlns:ns2="urn:jaus:jsidl:plus">
    <description xml:space="preserve">This service provides access to the basic 
		capabilities and configuration of a visual sensor, allowing the controlling 
		component to set the visual sensor to a particular operational profile. The 
		Query Sensor Geometric Properties message can be used to determine the 
		geometric relationship between the sensor and the vehicle coordinate system. 
		Three possible coordinate responses are possible; (a) the service does not 
		know the sensorâ€™s position, (b) the sensor coordinate system is fixed with 
		respect to the vehicle and (c) the sensor is attached to some manipulator. 
		These cases are supported by the Report Sensor Geometric Properties message 
		and are described therein.</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost or reordered.</assumptions>
    <references>
        <inherits_from name="accessControl" id="urn:jaus:jss:core:AccessControl" version="1.1"/>
    </references>
    <message_set>
        <input_set>
            <message_def name="QuerySensorGeometricProperties" message_id="2805" is_command="false">
                <description xml:space="preserve">This message shall cause the 
			receiving component to reply to the requestor with a Report 
			Sensor Geometric Properties message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="SensorIdList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="SensorIDQueryRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="AllSensors"/>
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                                </value_set>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryVisualSensorConfiguration" message_id="2807" is_command="false">
                <description xml:space="preserve">This message must be used to 
			query for the current configuration of the given visual sensor(s). 
			It shall cause the receiving service to reply to the requestor 
			with a Report Visual Sensor Configuration message. A logical 
			AND shall be performed on the requested presence vector and 
			that representing the available fields from the responder. 
			The resulting message shall contain the fields indicated by 
			the result of this logical AND operation.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="QueryVisualSensorConfigurationList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="QueryVisualSensorConfigurationRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="AllSensors"/>
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="QueryPresenceVector" optional="false" field_type="unsigned short integer" field_units="one"/>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryVisualSensorCapabilities" message_id="2806" is_command="false" deprecated="true">
                <description xml:space="preserve">This message must be used to 
			query for the capabilities of all available visual sensors 
			on the receiving service. It shall cause the receiving service 
			to reply to the requestor with a Report Visual Sensor 
			Capabilities message. A logical AND shall be performed on 
			the requested presence vector and that representing the 
			available fields from the responder.  The resulting message 
			shall contain the fields indicated by the result of this 
			logical AND operation.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="QueryVisualSensorCapabilitiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="QueryVisualSensorCapabilitiesRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="AllSensors"/>
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="QueryPresenceVector" optional="false" field_type="unsigned short integer" field_units="one"/>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="QueryVisualSensorCapabilitiesExt" message_id="280A" is_command="false">
                <description xml:space="preserve">This message must be used to 
			query for the extended capabilities of all available visual sensors 
			on the receiving service. It shall cause the receiving service 
			to reply to the requestor with a Report Visual Sensor 
			Capabilities Ext message. A logical AND shall be performed on 
			the requested presence vector and that representing the 
			available fields from the responder.  The resulting message 
			shall contain the fields indicated by the result of this 
			logical AND operation.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="QueryVisualSensorCapabilitiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="QueryVisualSensorCapabilitiesRec" optional="false">
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor being queried. Zero (0) is used to query all sensors associated with this service." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="AllSensors"/>
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive" interpretation="Specific ID to be queried"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="QueryPresenceVector" optional="false" field_type="unsigned integer" field_units="one"/>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="SetVisualSensorConfiguration" message_id="0803" is_command="true">
                <description xml:space="preserve">This message is used to set the configuration of the visual sensors associated with the service. Configuration is based off of each sensorâ€™s capabilities as described in the Report Visual Sensor Capabilities message. This message shall cause the receiving service to reply to the sender with a Confirm Sensor Configuration message. If the configuration specified is invalid for a given sensor ID, the confirm message shall contain an Visual Sensor Error Record for the given Sensor ID however other, valid, configurations specified shall be set (if they exist).</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="VisualSensorConfigurationSequence" optional="false">
                        <record name="RequestIdRec" optional="false">
                            <fixed_field name="RequestID" optional="false" field_type="unsigned byte" field_units="one"/>
                        </record>
                        <list name="VisualSensorConfigurationList" optional="false">
                            <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                            <record name="VisualSensorConfigurationRec" optional="false">
                                <presence_vector field_type_unsigned="unsigned short integer"/>
                                <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="SensorState" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Active"/>
                                        <value_enum enum_index="1" enum_const="Standby"/>
                                        <value_enum enum_index="2" enum_const="Off"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="ZoomMode" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Mixed" interpretation="When active, this mode allows both analog (optical) and digital zoom."/>
                                        <value_enum enum_index="1" enum_const="Analog Only" interpretation="When active, this mode restricts zoom to analog (optical) capabilities only."/>
                                        <value_enum enum_index="2" enum_const="Digital Only" interpretation="When active, this mode restricts zoom to digital capabilities only. This may result in a loss of resolution."/>
                                        <value_enum enum_index="3" enum_const="Off" interpretation="When active, this mode prohibits any zoom."/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="ZoomLevel" optional="true" field_type="unsigned short integer" field_units="percent">
                                    <scale_range real_lower_limit="0.0" real_upper_limit="100.0" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="FocalLength" optional="true" field_type="unsigned integer" field_units="meter">
                                    <scale_range real_lower_limit="0.0" real_upper_limit="2.0" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="HorizontalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                    <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="VerticalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                    <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="FocusMode" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Auto Focus"/>
                                        <value_enum enum_index="1" enum_const="Manual Focus"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="FocusValue" optional="true" field_type="unsigned short integer" field_units="percent">
                                    <scale_range real_lower_limit="0.0" real_upper_limit="100.0" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="WhiteBalance" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Auto"/>
                                        <value_enum enum_index="1" enum_const="Daylight"/>
                                        <value_enum enum_index="2" enum_const="Cloudy"/>
                                        <value_enum enum_index="3" enum_const="Shade"/>
                                        <value_enum enum_index="4" enum_const="Tungsten"/>
                                        <value_enum enum_index="5" enum_const="Flurescent"/>
                                        <value_enum enum_index="6" enum_const="Flash"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="ImagingMode" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Color"/>
                                        <value_enum enum_index="1" enum_const="Greyscale"/>
                                        <value_enum enum_index="2" enum_const="Infrared"/>
                                        <value_enum enum_index="3" enum_const="Low Light"/>
                                        <value_enum enum_index="4" enum_const="Thermal_WhiteHot"/>
                                        <value_enum enum_index="5" enum_const="Thermal_BlackHot"/>
                                        <value_enum enum_index="6" enum_const="Thermal_Rainbow"/>
                                        <value_range lower_limit="7" lower_limit_type="inclusive" upper_limit="20" upper_limit_type="inclusive" interpretation="Reserved for future use"/>
                                        <value_range lower_limit="21" lower_limit_type="inclusive" upper_limit="31" upper_limit_type="inclusive" interpretation="Reserved for program, implementation, or sensor specific modes"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="ExposureMode" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Auto"/>
                                        <value_enum enum_index="1" enum_const="Manual"/>
                                        <value_enum enum_index="2" enum_const="Shutter Priority"/>
                                        <value_enum enum_index="3" enum_const="Aperture Priority"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="MeteringMode" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Auto"/>
                                        <value_enum enum_index="1" enum_const="CenterWeighted"/>
                                        <value_enum enum_index="2" enum_const="Spot"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="ShutterSpeed" optional="true" field_type="unsigned short integer" field_units="second">
                                    <scale_range real_lower_limit="0.0" real_upper_limit="60.0" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="Aperture" optional="true" field_type="unsigned short integer" field_units="one">
                                    <scale_range real_lower_limit="0.1" real_upper_limit="128.0" integer_function="round"/>
                                </fixed_field>
                                <fixed_field name="LightSensitivity" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Auto"/>
                                        <value_enum enum_index="1" enum_const="ISO 100"/>
                                        <value_enum enum_index="2" enum_const="ISO 200"/>
                                        <value_enum enum_index="3" enum_const="ISO 400"/>
                                        <value_enum enum_index="4" enum_const="ISO 800"/>
                                        <value_enum enum_index="5" enum_const="ISO 1600"/>
                                        <value_enum enum_index="6" enum_const="ISO 3200"/>
                                    </value_set>
                                </fixed_field>
                                <fixed_field name="ImageStabilization" optional="true" field_type="unsigned byte" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Off"/>
                                        <value_enum enum_index="1" enum_const="On"/>
                                    </value_set>
                                </fixed_field>
                            </record>
                        </list>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
        </input_set>
        <output_set>
            <message_def name="ConfirmSensorConfiguration" message_id="0801" is_command="false">
                <description xml:space="preserve">This message is used to notify a client component that the configuration has been received with the values specified in the corresponding set message with Request ID matching the value of field 1 of this message. If the specified configuration request is deemed valid, the SensorIdRec is returned with the matching SensorID (or illuminatorID) of the 
			sensor (or illuminator) for which the configuration was successfully 
			set. If the requested configuration is invalid, one of the ErrorRec 
			types shall be returned (depending on the source message) with 
			an error code and description of the configuration setting which 
			was deemed invalid.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <sequence name="ConfirmSensorConfigurationSequence" optional="false">
                        <record name="RequestIdRec" optional="false">
                            <fixed_field name="RequestID" optional="false" field_type="unsigned byte" field_units="one"/>
                        </record>
                        <list name="ConfirmSensorList" optional="false">
                            <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                            <variant name="ConfirmSensorConfigurationVariant" optional="false">
                                <vtag_field min_count="0" max_count="9" field_type_unsigned="unsigned byte"/>
                                <record name="SensorIdRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                </record>
                                <record name="RangeSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="RangeSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Horizontal Field of View"/>
                                            <value_enum enum_index="2" enum_const="Invalid Vertical Field of View"/>
                                            <value_enum enum_index="3" enum_const="Invalid Update Rate"/>
                                            <value_enum enum_index="4" enum_const="Invalid Sensor Range"/>
                                            <value_enum enum_index="5" enum_const="Invalid Sensor State"/>
                                            <value_enum enum_index="6" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="VisualSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="VisualSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Sensor State"/>
                                            <value_enum enum_index="2" enum_const="Invalid Zoom Mode"/>
                                            <value_enum enum_index="3" enum_const="Invalid Zoom Value"/>
                                            <value_enum enum_index="4" enum_const="Invalid Focus Mode"/>
                                            <value_enum enum_index="5" enum_const="Invalid Focus Value"/>
                                            <value_enum enum_index="6" enum_const="Invalid White Balance"/>
                                            <value_enum enum_index="7" enum_const="Invalid Imaging Mode"/>
                                            <value_enum enum_index="8" enum_const="Invalid Exposure Mode"/>
                                            <value_enum enum_index="9" enum_const="Invalid Metering Mode"/>
                                            <value_enum enum_index="10" enum_const="Invalid Shutter Speed"/>
                                            <value_enum enum_index="11" enum_const="Invalid Aperture Value"/>
                                            <value_enum enum_index="12" enum_const="Invalid Light Sensitivity"/>
                                            <value_enum enum_index="13" enum_const="Invalid Image Stabilization"/>
                                            <value_enum enum_index="14" enum_const="Invalid Horizontal FOV"/>
                                            <value_enum enum_index="15" enum_const="Invalid Vertical FOV"/>
                                            <value_enum enum_index="16" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalVideoSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalVideoErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Minimum Bit Rate"/>
                                            <value_enum enum_index="2" enum_const="Invalid Maximum Bit Rate"/>
                                            <value_enum enum_index="3" enum_const="Requested Frame Rate Too Low"/>
                                            <value_enum enum_index="4" enum_const="Requested Frame Rate Too High"/>
                                            <value_enum enum_index="5" enum_const="Invalid Frame Size"/>
                                            <value_enum enum_index="6" enum_const="Invalid Format"/>
                                            <value_enum enum_index="7" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="AnalogVideoSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="AnalogVideoErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Format"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="StillImageSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="StillImageErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Frame Size"/>
                                            <value_enum enum_index="2" enum_const="Invalid Format"/>
                                            <value_enum enum_index="3" enum_const="Multiple Invalid Parameters"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="H264VideoEncodingErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="H264VideoEncodingErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid Profile"/>
                                            <value_enum enum_index="2" enum_const="Invalid Preset"/>
                                            <value_enum enum_index="3" enum_const="Invalid GroupOfPictures"/>
                                            <value_enum enum_index="4" enum_const="Invalid GDR"/>
                                            <value_enum enum_index="5" enum_const="Invalid RegionOfInterest"/>
                                            <value_enum enum_index="6" enum_const="Invalid IntraMacroRefresh"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalAudioSensorErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalAudioSensorErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Invalid BitRate"/>
                                            <value_enum enum_index="2" enum_const="Invalid Format"/>
                                            <value_enum enum_index="3" enum_const="Invalid SampleRate"/>
                                            <value_enum enum_index="4" enum_const="Invalid BitDepth"/>
                                            <value_enum enum_index="5" enum_const="Invalid EncodingQuality"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="DigitalAudioOutputErrorRec" optional="false">
                                    <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                        </value_set>
                                    </fixed_field>
                                    <fixed_field name="DigitalAudioOutputErrorCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Stream Not Found"/>
                                            <value_enum enum_index="2" enum_const="Stream Not Supported"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                                <record name="VideoIlluminatorErrorRec" optional="false">
                                    <fixed_field name="IlluminatorID" optional="false" field_type="unsigned short integer" field_units="one"/>
                                    <fixed_field name="VideoIlluminatorErrorRecCode" optional="false" field_type="unsigned byte" field_units="one">
                                        <value_set offset_to_lower_limit="false">
                                            <value_enum enum_index="0" enum_const="Unknown Sensor ID"/>
                                            <value_enum enum_index="1" enum_const="Unsupported Mode"/>
                                            <value_enum enum_index="2" enum_const="Unsupported Beam Width"/>
                                            <value_enum enum_index="3" enum_const="Unsupported Beam Height"/>
                                            <value_enum enum_index="255" enum_const="Unknown Error / Fault"/>
                                        </value_set>
                                    </fixed_field>
                                    <variable_length_string name="ErrorMessage" optional="false">
                                        <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                                    </variable_length_string>
                                </record>
                            </variant>
                        </list>
                    </sequence>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportSensorGeometricProperties" message_id="4805" is_command="false">
                <description xml:space="preserve">This message is used to report information about the geometric properties of a sensor with respect to the vehicle. Three possible use cases are supported: 1.The sensor has no knowledge of its geometric properties. 2.The sensor is rigidly mounted to the vehicle and the position and orientation with respect to the vehicle coordinate system is known. In this case the position and orientation of the sensor is defined by a position vector (x, y, z) and unit quaternion (d; a, b, c) which specifies the axis and angle of rotation used to establish the orientation of the sensor coordinate system with respect to the vehicle coordinate system. 3.The sensor is mounted to a manipulator in which the JAUS ID, joint number and the sensor offset are described. In this case the position and orientation of the sensor is defined by a position vector (x, y, z) and unit quaternion (d; a, b, c) which specifies the axis and angle of rotation used to establish the orientation of the sensor coordinate system with respect to the link coordinate system.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="GeometricPropertiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <sequence name="GeometricPropertiesSequence" optional="false">
                            <record name="SensorIdRec" optional="false">
                                <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                    <value_set offset_to_lower_limit="false">
                                        <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                    </value_set>
                                </fixed_field>
                            </record>
                            <variant name="GeometricPropertiesVariant" optional="false">
                                <vtag_field min_count="0" max_count="2" field_type_unsigned="unsigned byte"/>
                                <variant name="NoGeometricPropertiesVariant" optional="false">
                                    <vtag_field min_count="0" max_count="0" field_type_unsigned="unsigned byte"/>
                                </variant>
                                <record name="StaticGeometricPropertiesRec" optional="false">
                                    <array name="SensorPosition" optional="false">
                                        <fixed_field name="PositionVectorElement" optional="false" field_type="unsigned integer" field_units="meter">
                                            <scale_range real_lower_limit="-30.0" real_upper_limit="30.0" integer_function="round"/>
                                        </fixed_field>
                                        <dimension name="PositionVectorDimension" size="3"/>
                                    </array>
                                    <array name="UnitQuaternion" optional="false">
                                        <fixed_field name="UnitQuaternionElement" optional="false" field_type="unsigned integer" field_units="one">
                                            <scale_range real_lower_limit="-1.0" real_upper_limit="1.0" integer_function="round"/>
                                        </fixed_field>
                                        <dimension name="UnitQuaternionDimension" size="4"/>
                                    </array>
                                </record>
                                <record name="ManipulatorGeometricPropertiesRec" optional="false">
                                    <fixed_field name="SubsystemID" optional="false" field_type="unsigned short integer" field_units="one"/>
                                    <fixed_field name="NodeID" optional="false" field_type="unsigned byte" field_units="one"/>
                                    <fixed_field name="ComponentID" optional="false" field_type="unsigned byte" field_units="one"/>
                                    <fixed_field name="JointNumber" optional="false" field_type="unsigned byte" field_units="one"/>
                                    <array name="SensorPosition" optional="false">
                                        <fixed_field name="PositionVectorElement" optional="false" field_type="unsigned integer" field_units="meter">
                                            <scale_range real_lower_limit="-30.0" real_upper_limit="30.0" integer_function="round"/>
                                        </fixed_field>
                                        <dimension name="PositionVectorDimension" size="3"/>
                                    </array>
                                    <array name="UnitQuaternion" optional="false">
                                        <fixed_field name="UnitQuaternionElement" optional="false" field_type="unsigned integer" field_units="one">
                                            <scale_range real_lower_limit="-1.0" real_upper_limit="1.0" integer_function="round"/>
                                        </fixed_field>
                                        <dimension name="UnitQuaternionDimension" size="4"/>
                                    </array>
                                </record>
                            </variant>
                        </sequence>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportVisualSensorConfiguration" message_id="4807" is_command="false">
                <description xml:space="preserve">This message is sent in response to a Query Visual Sensor Configuration message. It is populated with the current sensor configuration (per sensor ID) as defined in the table below.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="VisualSensorConfigurationList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="VisualSensorConfigurationRec" optional="false">
                            <presence_vector field_type_unsigned="unsigned short integer"/>
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="SensorState" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Active"/>
                                    <value_enum enum_index="1" enum_const="Standby"/>
                                    <value_enum enum_index="2" enum_const="Off"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="ZoomMode" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Mixed" interpretation="When active, this mode allows both analog (optical) and digital zoom."/>
                                    <value_enum enum_index="1" enum_const="Analog Only" interpretation="When active, this mode restricts zoom to analog (optical) capabilities only."/>
                                    <value_enum enum_index="2" enum_const="Digital Only" interpretation="When active, this mode restricts zoom to digital capabilities only. This may result in a loss of resolution."/>
                                    <value_enum enum_index="3" enum_const="Off" interpretation="When active, this mode prohibits any zoom."/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="ZoomLevel" optional="true" field_type="unsigned short integer" field_units="percent">
                                <scale_range real_lower_limit="0.0" real_upper_limit="100.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="FocalLength" optional="true" field_type="unsigned integer" field_units="meter">
                                <scale_range real_lower_limit="0.0" real_upper_limit="2.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="HorizontalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="VerticalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="FocusMode" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Auto Focus"/>
                                    <value_enum enum_index="1" enum_const="Manual Focus"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="FocusValue" optional="true" field_type="unsigned short integer" field_units="percent">
                                <scale_range real_lower_limit="0.0" real_upper_limit="100.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="WhiteBalance" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Auto"/>
                                    <value_enum enum_index="1" enum_const="Daylight"/>
                                    <value_enum enum_index="2" enum_const="Cloudy"/>
                                    <value_enum enum_index="3" enum_const="Shade"/>
                                    <value_enum enum_index="4" enum_const="Tungsten"/>
                                    <value_enum enum_index="5" enum_const="Flurescent"/>
                                    <value_enum enum_index="6" enum_const="Flash"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="ImagingMode" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Color"/>
                                    <value_enum enum_index="1" enum_const="Greyscale"/>
                                    <value_enum enum_index="2" enum_const="Infrared"/>
                                    <value_enum enum_index="3" enum_const="Low Light"/>
                                    <value_enum enum_index="4" enum_const="Thermal_WhiteHot"/>
                                    <value_enum enum_index="5" enum_const="Thermal_BlackHot"/>
                                    <value_enum enum_index="6" enum_const="Thermal_Rainbow"/>
                                    <value_range lower_limit="7" lower_limit_type="inclusive" upper_limit="20" upper_limit_type="inclusive" interpretation="Reserved for future use"/>
                                    <value_range lower_limit="21" lower_limit_type="inclusive" upper_limit="31" upper_limit_type="inclusive" interpretation="Reserved for program, implementation, or sensor specific modes"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="ExposureMode" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Auto"/>
                                    <value_enum enum_index="1" enum_const="Manual"/>
                                    <value_enum enum_index="2" enum_const="Shutter Priority"/>
                                    <value_enum enum_index="3" enum_const="Aperture Priority"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="MeteringMode" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Auto"/>
                                    <value_enum enum_index="1" enum_const="CenterWeighted"/>
                                    <value_enum enum_index="2" enum_const="Spot"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="ShutterSpeed" optional="true" field_type="unsigned short integer" field_units="second">
                                <scale_range real_lower_limit="0.0" real_upper_limit="60.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="Aperture" optional="true" field_type="unsigned short integer" field_units="one">
                                <scale_range real_lower_limit="0.1" real_upper_limit="128.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="LightSensitivity" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Auto"/>
                                    <value_enum enum_index="1" enum_const="ISO 100"/>
                                    <value_enum enum_index="2" enum_const="ISO 200"/>
                                    <value_enum enum_index="3" enum_const="ISO 400"/>
                                    <value_enum enum_index="4" enum_const="ISO 800"/>
                                    <value_enum enum_index="5" enum_const="ISO 1600"/>
                                    <value_enum enum_index="6" enum_const="ISO 3200"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="ImageStabilization" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="Off"/>
                                    <value_enum enum_index="1" enum_const="On"/>
                                </value_set>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportVisualSensorCapabilities" message_id="4806" is_command="false" deprecated="true">
                <description xml:space="preserve">This message is used to report the sensorsâ€™ capabilities upon receipt of a Query Visual Sensor Capabilities message. Capabilities include sensor properties, values and ranges which can be modified by the Set Range Sensor Configuration message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="VisualSensorCapabilitiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="VisualSensorCapabilitiesRec" optional="false">
                            <presence_vector field_type_unsigned="unsigned short integer"/>
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                </value_set>
                            </fixed_field>
                            <variable_length_string name="SensorName" optional="false">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                            </variable_length_string>
                            <bit_field name="SupportedStates" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Active">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Standby">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Off">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="ZoomModes" optional="true" interpretation="While many cameras offer zoom using purely analog (or optical) or digital techniques, some use a 'mixed' mode where both are used in combination. This is often of the form of analog (optical) zoom to its physical maximum, e.g. 10x, and digital beyond that to achieve higher magnifications, e.g. 150x. Those cameras that offer mixed mode can usually be configured to perform in a purely analog or digital function, effectively shutting off the other zoom behavior. This bitfield specifies which zoom techniques are available in the interface." field_type_unsigned="unsigned byte">
                                <sub_field name="Mixed" interpretation="When active, this mode allows both analog (optical) and digital zoom.">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="AnalogOnly" interpretation="When active, this mode restricts zoom to analog (optical) capabilities only.">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="DigitalOnly" interpretation="When active, this mode restricts zoom to digital capabilities only. This may result in a loss of resolution.">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="None" interpretation="When active, this mode prohibits any zoom.">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="FocusModes" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="AutoFocus">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ManualFocus">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="WhiteBalance" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Auto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Daylight">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Cloudy">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Shade">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Tungsten">
                                    <bit_range from_index="4" to_index="4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Flurescent">
                                    <bit_range from_index="5" to_index="5"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Flash">
                                    <bit_range from_index="6" to_index="6"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="ImagingModes" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Color">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Greyscale">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Infrared">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Lowlight">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ThermalWhiteHot">
                                    <bit_range from_index="4" to_index="4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ThermalBlackHot">
                                    <bit_range from_index="5" to_index="5"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ThermalRainbow">
                                    <bit_range from_index="6" to_index="6"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ReservedForFutureUse">
                                    <bit_range from_index="7" to_index="7"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Reserved"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="ExposureModes" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Auto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Manual">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ShutterPriority">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="AperturePriority">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="MeteringModes" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="MatrixOrAuto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="CenterWeighted">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Spot">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <fixed_field name="MinimumShutterSpeed" optional="true" field_type="unsigned short integer" field_units="second">
                                <scale_range real_lower_limit="0.0" real_upper_limit="60.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumShutterSpeed" optional="true" field_type="unsigned short integer" field_units="second">
                                <scale_range real_lower_limit="0.0" real_upper_limit="60.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MinimumAperture" optional="true" field_type="unsigned short integer" field_units="one">
                                <scale_range real_lower_limit="0.1" real_upper_limit="128.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumAperture" optional="true" field_type="unsigned short integer" field_units="one">
                                <scale_range real_lower_limit="0.1" real_upper_limit="128.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MinimumFocalLength" optional="true" field_type="unsigned integer" field_units="meter">
                                <scale_range real_lower_limit="0.0" real_upper_limit="2.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumFocalLength" optional="true" field_type="unsigned integer" field_units="meter">
                                <scale_range real_lower_limit="0.0" real_upper_limit="2.0" integer_function="round"/>
                            </fixed_field>
                            <bit_field name="LightSensitivityLevels" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Auto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO100">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO200">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO400">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO800">
                                    <bit_range from_index="4" to_index="4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO1600">
                                    <bit_range from_index="5" to_index="5"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO3200">
                                    <bit_range from_index="6" to_index="6"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <fixed_field name="ImageStabilization" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="False"/>
                                    <value_enum enum_index="1" enum_const="True"/>
                                </value_set>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
            <message_def name="ReportVisualSensorCapabilitiesExt" message_id="480A" is_command="false">
                <description xml:space="preserve">This message is used to report the sensorsâ€™ extended capabilities upon receipt of a Query Visual Sensor Capabilities Ext message. Capabilities include sensor properties, values and ranges which can be modified by the Set Visual Sensor Configuration message.</description>
                <header name="AppHeader">
                    <record name="HeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" interpretation="A two byte field to hold the message ID of a message" field_type="unsigned short integer" field_units="one"/>
                    </record>
                </header>
                <body name="Body">
                    <list name="VisualSensorCapabilitiesList" optional="false">
                        <count_field min_count="0" max_count="65535" field_type_unsigned="unsigned short integer"/>
                        <record name="VisualSensorCapabilitiesRec" optional="false">
                            <presence_vector field_type_unsigned="unsigned integer"/>
                            <fixed_field name="SensorID" optional="false" interpretation="ID of the sensor. Zero (0) is not a valid ID in this message." field_type="unsigned short integer" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_range lower_limit="1" lower_limit_type="inclusive" upper_limit="65535" upper_limit_type="inclusive"/>
                                </value_set>
                            </fixed_field>
                            <variable_length_string name="SensorName" optional="false">
                                <count_field min_count="0" max_count="255" field_type_unsigned="unsigned byte"/>
                            </variable_length_string>
                            <bit_field name="SupportedStates" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Active">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Standby">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Off">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="ZoomModes" optional="true" interpretation="While many cameras offer zoom using purely analog (or optical) or digital techniques, some use a 'mixed' mode where both are used in combination. This is often of the form of analog (optical) zoom to its physical maximum, e.g. 10x, and digital beyond that to achieve higher magnifications, e.g. 150x. Those cameras that offer mixed mode can usually be configured to perform in a purely analog or digital function, effectively shutting off the other zoom behavior. This bitfield specifies which zoom techniques are available in the interface." field_type_unsigned="unsigned byte">
                                <sub_field name="Mixed" interpretation="When active, this mode allows both analog (optical) and digital zoom.">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="AnalogOnly" interpretation="When active, this mode restricts zoom to analog (optical) capabilities only.">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="DigitalOnly" interpretation="When active, this mode restricts zoom to digital capabilities only. This may result in a loss of resolution.">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="None" interpretation="When active, this mode prohibits any zoom.">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="FocusModes" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="AutoFocus">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ManualFocus">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="WhiteBalance" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Auto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Daylight">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Cloudy">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Shade">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Tungsten">
                                    <bit_range from_index="4" to_index="4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Flurescent">
                                    <bit_range from_index="5" to_index="5"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Flash">
                                    <bit_range from_index="6" to_index="6"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="ImagingModes" optional="true" field_type_unsigned="unsigned integer">
                                <sub_field name="Color">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Greyscale">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Infrared">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Lowlight">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ThermalWhiteHot">
                                    <bit_range from_index="4" to_index="4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ThermalBlackHot">
                                    <bit_range from_index="5" to_index="5"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ThermalRainbow">
                                    <bit_range from_index="6" to_index="6"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ReservedForFutureUse">
                                    <bit_range from_index="7" to_index="20"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Reserved"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ReservedForProgramSpecificUse">
                                    <bit_range from_index="21" to_index="31"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Reserved"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="ExposureModes" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Auto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Manual">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ShutterPriority">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="AperturePriority">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <bit_field name="MeteringModes" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="MatrixOrAuto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="CenterWeighted">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="Spot">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <fixed_field name="MinimumShutterSpeed" optional="true" field_type="unsigned short integer" field_units="second">
                                <scale_range real_lower_limit="0.0" real_upper_limit="60.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumShutterSpeed" optional="true" field_type="unsigned short integer" field_units="second">
                                <scale_range real_lower_limit="0.0" real_upper_limit="60.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MinimumAperture" optional="true" field_type="unsigned short integer" field_units="one">
                                <scale_range real_lower_limit="0.1" real_upper_limit="128.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumAperture" optional="true" field_type="unsigned short integer" field_units="one">
                                <scale_range real_lower_limit="0.1" real_upper_limit="128.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MinimumFocalLength" optional="true" field_type="unsigned integer" field_units="meter">
                                <scale_range real_lower_limit="0.0" real_upper_limit="2.0" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumFocalLength" optional="true" field_type="unsigned integer" field_units="meter">
                                <scale_range real_lower_limit="0.0" real_upper_limit="2.0" integer_function="round"/>
                            </fixed_field>
                            <bit_field name="LightSensitivityLevels" optional="true" field_type_unsigned="unsigned byte">
                                <sub_field name="Auto">
                                    <bit_range from_index="0" to_index="0"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO100">
                                    <bit_range from_index="1" to_index="1"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO200">
                                    <bit_range from_index="2" to_index="2"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO400">
                                    <bit_range from_index="3" to_index="3"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO800">
                                    <bit_range from_index="4" to_index="4"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO1600">
                                    <bit_range from_index="5" to_index="5"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                                <sub_field name="ISO3200">
                                    <bit_range from_index="6" to_index="6"/>
                                    <value_set offset_to_lower_limit="false">
                                        <value_enum enum_index="0" enum_const="Unsupported"/>
                                        <value_enum enum_index="1" enum_const="Supported"/>
                                    </value_set>
                                </sub_field>
                            </bit_field>
                            <fixed_field name="ImageStabilization" optional="true" field_type="unsigned byte" field_units="one">
                                <value_set offset_to_lower_limit="false">
                                    <value_enum enum_index="0" enum_const="False"/>
                                    <value_enum enum_index="1" enum_const="True"/>
                                </value_set>
                            </fixed_field>
                            <fixed_field name="MinimumHorizontalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumHorizontalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MinimumVerticalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                            </fixed_field>
                            <fixed_field name="MaximumVerticalFieldOfView" optional="true" field_type="unsigned integer" field_units="radian">
                                <scale_range real_lower_limit="-3.141592653589793" real_upper_limit="3.141592653589793" integer_function="round"/>
                            </fixed_field>
                        </record>
                    </list>
                </body>
                <footer name="Footer"/>
            </message_def>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <start state_machine_name="accessControl.events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="accessControl.events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready" initial_state="NotControlled">
                    <state name="NotControlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                        <default_state>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryVisualSensorCapabilities" value="msg" interpretation="enveloped QueryVisualSensorCapabilities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportVisualSensorCapabilities" interpretation="Send a ReportVisualSensorCapabilities message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryVisualSensorCapabilitiesExt" value="msg" interpretation="enveloped QueryVisualSensorCapabilitiesExt message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportVisualSensorCapabilitiesExt" interpretation="Send a ReportVisualSensorCapabilitiesExt message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryVisualSensorConfiguration" value="msg" interpretation="enveloped QueryVisualSensorConfiguration message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportVisualSensorConfiguration" interpretation="Send a ReportVisualSensorConfiguration message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QuerySensorGeometricProperties" value="msg" interpretation="enveloped QuerySensorGeometricProperties message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportSensorGeometricProperties" interpretation="Send a ReportSensorGeometricProperties message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <state name="Controlled" initial_state="Available">
                        <state name="Available"/>
                        <state name="NotAvailable"/>
                        <default_state>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="SetVisualSensorConfiguration" value="msg" interpretation="enveloped SetVisualSensorConfiguration message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <guard condition="accessControl.isControllingClient( transportData )" interpretation="True if the message that triggered the           transition is received from the client that is in           control of this service."/>
                                <internal/>
                                <action name="sendConfirmSensorConfiguration" interpretation="Send sendConfirmSensorConfiguration message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                                <action name="updateVisualSensorConfiguration" interpretation="Update the sensor user controllable           configuration parameters according to the ones specified.">
                                    <argument value="msg"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryVisualSensorCapabilities" value="msg" interpretation="enveloped QueryVisualSensorCapabilities message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportVisualSensorCapabilities" interpretation="Send a ReportVisualSensorCapabilities message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryVisualSensorCapabilitiesExt" value="msg" interpretation="enveloped QueryVisualSensorCapabilitiesExt message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportVisualSensorCapabilitiesExt" interpretation="Send a ReportVisualSensorCapabilitiesExt message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QueryVisualSensorConfiguration" value="msg" interpretation="enveloped QueryVisualSensorConfiguration message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportVisualSensorConfiguration" interpretation="Send a ReportVisualSensorConfiguration message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                            <transition name="accessControl.events.transport.Receive">
                                <parameter type="QuerySensorGeometricProperties" value="msg" interpretation="enveloped QuerySensorGeometricProperties message"/>
                                <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                <internal/>
                                <action name="sendReportSensorGeometricProperties" interpretation="Send a ReportSensorGeometricProperties message">
                                    <argument value="msg"/>
                                    <argument value="transportData"/>
                                </action>
                            </transition>
                        </default_state>
                    </state>
                    <default_state/>
                </state>
            </state>
        </state_machine>
        <state_machine name="accessControl.events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
